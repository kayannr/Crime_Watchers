{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import csv\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from datetime import date\n",
    "\n",
    "import gmaps\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "crime_before = \"Arrest_Data_from_2010_to_Present.csv\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Report ID</th>\n",
       "      <th>Arrest Date</th>\n",
       "      <th>Time</th>\n",
       "      <th>Area ID</th>\n",
       "      <th>Area Name</th>\n",
       "      <th>Reporting District</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex Code</th>\n",
       "      <th>Descent Code</th>\n",
       "      <th>Charge Group Code</th>\n",
       "      <th>Charge Group Description</th>\n",
       "      <th>Arrest Type Code</th>\n",
       "      <th>Charge</th>\n",
       "      <th>Charge Description</th>\n",
       "      <th>Address</th>\n",
       "      <th>Cross Street</th>\n",
       "      <th>Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>191811472</td>\n",
       "      <td>05/03/2019</td>\n",
       "      <td>1700.0</td>\n",
       "      <td>18</td>\n",
       "      <td>Southeast</td>\n",
       "      <td>1802</td>\n",
       "      <td>23</td>\n",
       "      <td>F</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>M</td>\n",
       "      <td>653.22 PC</td>\n",
       "      <td>NaN</td>\n",
       "      <td>91ST</td>\n",
       "      <td>FIGUEROA</td>\n",
       "      <td>(33.9543, -118.2827)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>5614161</td>\n",
       "      <td>04/29/2019</td>\n",
       "      <td>1040.0</td>\n",
       "      <td>8</td>\n",
       "      <td>West LA</td>\n",
       "      <td>842</td>\n",
       "      <td>41</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Robbery</td>\n",
       "      <td>F</td>\n",
       "      <td>211PC</td>\n",
       "      <td>ROBBERY</td>\n",
       "      <td>11600    WILSHIRE                     BL</td>\n",
       "      <td>NaN</td>\n",
       "      <td>(34.0508, -118.4592)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>5806609</td>\n",
       "      <td>11/23/2019</td>\n",
       "      <td>1830.0</td>\n",
       "      <td>4</td>\n",
       "      <td>Hollenbeck</td>\n",
       "      <td>457</td>\n",
       "      <td>23</td>\n",
       "      <td>F</td>\n",
       "      <td>H</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Robbery</td>\n",
       "      <td>F</td>\n",
       "      <td>211PC</td>\n",
       "      <td>ROBBERY</td>\n",
       "      <td>FICKETT</td>\n",
       "      <td>CINCINNATI</td>\n",
       "      <td>(34.0477, -118.2047)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>5615197</td>\n",
       "      <td>04/30/2019</td>\n",
       "      <td>615.0</td>\n",
       "      <td>6</td>\n",
       "      <td>Hollywood</td>\n",
       "      <td>663</td>\n",
       "      <td>27</td>\n",
       "      <td>M</td>\n",
       "      <td>O</td>\n",
       "      <td>5.0</td>\n",
       "      <td>Burglary</td>\n",
       "      <td>F</td>\n",
       "      <td>459PC</td>\n",
       "      <td>BURGLARY</td>\n",
       "      <td>LA BREA</td>\n",
       "      <td>LEXINGTON</td>\n",
       "      <td>(34.0907, -118.3384)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>5615701</td>\n",
       "      <td>04/30/2019</td>\n",
       "      <td>1100.0</td>\n",
       "      <td>9</td>\n",
       "      <td>Van Nuys</td>\n",
       "      <td>901</td>\n",
       "      <td>2</td>\n",
       "      <td>F</td>\n",
       "      <td>H</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>D</td>\n",
       "      <td>300(B)WIC</td>\n",
       "      <td>NaN</td>\n",
       "      <td>RAYMER</td>\n",
       "      <td>SEPULVEDA                    BL</td>\n",
       "      <td>(34.2149, -118.4674)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Report ID Arrest Date    Time  Area ID   Area Name  Reporting District  \\\n",
       "0  191811472  05/03/2019  1700.0       18   Southeast                1802   \n",
       "1    5614161  04/29/2019  1040.0        8     West LA                 842   \n",
       "2    5806609  11/23/2019  1830.0        4  Hollenbeck                 457   \n",
       "3    5615197  04/30/2019   615.0        6   Hollywood                 663   \n",
       "4    5615701  04/30/2019  1100.0        9    Van Nuys                 901   \n",
       "\n",
       "   Age Sex Code Descent Code  Charge Group Code Charge Group Description  \\\n",
       "0   23        F            B                NaN                      NaN   \n",
       "1   41        M            H                3.0                  Robbery   \n",
       "2   23        F            H                3.0                  Robbery   \n",
       "3   27        M            O                5.0                 Burglary   \n",
       "4    2        F            H                NaN                      NaN   \n",
       "\n",
       "  Arrest Type Code     Charge Charge Description  \\\n",
       "0                M  653.22 PC                NaN   \n",
       "1                F      211PC            ROBBERY   \n",
       "2                F      211PC            ROBBERY   \n",
       "3                F      459PC           BURGLARY   \n",
       "4                D  300(B)WIC                NaN   \n",
       "\n",
       "                                    Address                     Cross Street  \\\n",
       "0                                      91ST                         FIGUEROA   \n",
       "1  11600    WILSHIRE                     BL                              NaN   \n",
       "2                                   FICKETT                       CINCINNATI   \n",
       "3                                   LA BREA                        LEXINGTON   \n",
       "4                                    RAYMER  SEPULVEDA                    BL   \n",
       "\n",
       "               Location  \n",
       "0  (33.9543, -118.2827)  \n",
       "1  (34.0508, -118.4592)  \n",
       "2  (34.0477, -118.2047)  \n",
       "3  (34.0907, -118.3384)  \n",
       "4  (34.2149, -118.4674)  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Display the Data\n",
    "before_df = pd.read_csv(crime_before)\n",
    "before_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Report ID</th>\n",
       "      <th>Arrest Date</th>\n",
       "      <th>Time</th>\n",
       "      <th>Area ID</th>\n",
       "      <th>Area Name</th>\n",
       "      <th>Reporting District</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex Code</th>\n",
       "      <th>Descent Code</th>\n",
       "      <th>Charge Group Code</th>\n",
       "      <th>Charge Group Description</th>\n",
       "      <th>Arrest Type Code</th>\n",
       "      <th>Charge</th>\n",
       "      <th>Charge Description</th>\n",
       "      <th>Address</th>\n",
       "      <th>Cross Street</th>\n",
       "      <th>Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>5806609</td>\n",
       "      <td>11/23/2019</td>\n",
       "      <td>1830.0</td>\n",
       "      <td>4</td>\n",
       "      <td>Hollenbeck</td>\n",
       "      <td>457</td>\n",
       "      <td>23</td>\n",
       "      <td>F</td>\n",
       "      <td>H</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Robbery</td>\n",
       "      <td>F</td>\n",
       "      <td>211PC</td>\n",
       "      <td>ROBBERY</td>\n",
       "      <td>FICKETT</td>\n",
       "      <td>CINCINNATI</td>\n",
       "      <td>(34.0477, -118.2047)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>5615197</td>\n",
       "      <td>04/30/2019</td>\n",
       "      <td>615.0</td>\n",
       "      <td>6</td>\n",
       "      <td>Hollywood</td>\n",
       "      <td>663</td>\n",
       "      <td>27</td>\n",
       "      <td>M</td>\n",
       "      <td>O</td>\n",
       "      <td>5.0</td>\n",
       "      <td>Burglary</td>\n",
       "      <td>F</td>\n",
       "      <td>459PC</td>\n",
       "      <td>BURGLARY</td>\n",
       "      <td>LA BREA</td>\n",
       "      <td>LEXINGTON</td>\n",
       "      <td>(34.0907, -118.3384)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>5615929</td>\n",
       "      <td>04/30/2019</td>\n",
       "      <td>1550.0</td>\n",
       "      <td>20</td>\n",
       "      <td>Olympic</td>\n",
       "      <td>2049</td>\n",
       "      <td>41</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Aggravated Assault</td>\n",
       "      <td>F</td>\n",
       "      <td>245(A)(2)PC</td>\n",
       "      <td>ADW W/FIREARM</td>\n",
       "      <td>8TH                          ST</td>\n",
       "      <td>VERMONT</td>\n",
       "      <td>(34.0578, -118.2916)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>190325212</td>\n",
       "      <td>11/23/2019</td>\n",
       "      <td>1315.0</td>\n",
       "      <td>3</td>\n",
       "      <td>Southwest</td>\n",
       "      <td>328</td>\n",
       "      <td>21</td>\n",
       "      <td>F</td>\n",
       "      <td>W</td>\n",
       "      <td>17.0</td>\n",
       "      <td>Liquor Laws</td>\n",
       "      <td>I</td>\n",
       "      <td>25620BP</td>\n",
       "      <td>OPEN ALCOHOLIC BEV IN PUBLIC PARK/PLACE</td>\n",
       "      <td>28TH                         ST</td>\n",
       "      <td>E  UNIVERSITY</td>\n",
       "      <td>(34.0278, -118.281)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>5809994</td>\n",
       "      <td>11/27/2019</td>\n",
       "      <td>2100.0</td>\n",
       "      <td>18</td>\n",
       "      <td>Southeast</td>\n",
       "      <td>1801</td>\n",
       "      <td>20</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>22.0</td>\n",
       "      <td>Driving Under Influence</td>\n",
       "      <td>M</td>\n",
       "      <td>23152(A)VC</td>\n",
       "      <td>DRUNK DRIVING ALCOHOL/DRUGS</td>\n",
       "      <td>FIGUEROA</td>\n",
       "      <td>MANCHESTER</td>\n",
       "      <td>(33.9601, -118.2827)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Report ID Arrest Date    Time  Area ID   Area Name  Reporting District  \\\n",
       "2     5806609  11/23/2019  1830.0        4  Hollenbeck                 457   \n",
       "3     5615197  04/30/2019   615.0        6   Hollywood                 663   \n",
       "5     5615929  04/30/2019  1550.0       20     Olympic                2049   \n",
       "10  190325212  11/23/2019  1315.0        3   Southwest                 328   \n",
       "13    5809994  11/27/2019  2100.0       18   Southeast                1801   \n",
       "\n",
       "    Age Sex Code Descent Code  Charge Group Code Charge Group Description  \\\n",
       "2    23        F            H                3.0                  Robbery   \n",
       "3    27        M            O                5.0                 Burglary   \n",
       "5    41        M            W                4.0       Aggravated Assault   \n",
       "10   21        F            W               17.0              Liquor Laws   \n",
       "13   20        M            H               22.0  Driving Under Influence   \n",
       "\n",
       "   Arrest Type Code       Charge                       Charge Description  \\\n",
       "2                 F        211PC                                  ROBBERY   \n",
       "3                 F        459PC                                 BURGLARY   \n",
       "5                 F  245(A)(2)PC                            ADW W/FIREARM   \n",
       "10                I      25620BP  OPEN ALCOHOLIC BEV IN PUBLIC PARK/PLACE   \n",
       "13                M   23152(A)VC              DRUNK DRIVING ALCOHOL/DRUGS   \n",
       "\n",
       "                            Address   Cross Street              Location  \n",
       "2                           FICKETT     CINCINNATI  (34.0477, -118.2047)  \n",
       "3                           LA BREA      LEXINGTON  (34.0907, -118.3384)  \n",
       "5   8TH                          ST        VERMONT  (34.0578, -118.2916)  \n",
       "10  28TH                         ST  E  UNIVERSITY   (34.0278, -118.281)  \n",
       "13                         FIGUEROA     MANCHESTER  (33.9601, -118.2827)  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Cleaning Data\n",
    "before_df = before_df.dropna(how='any')\n",
    "before_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Arrest Date</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex Code</th>\n",
       "      <th>Charge Group Description</th>\n",
       "      <th>Charge Description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>11/23/2019</td>\n",
       "      <td>23</td>\n",
       "      <td>F</td>\n",
       "      <td>Robbery</td>\n",
       "      <td>ROBBERY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>04/30/2019</td>\n",
       "      <td>27</td>\n",
       "      <td>M</td>\n",
       "      <td>Burglary</td>\n",
       "      <td>BURGLARY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>04/30/2019</td>\n",
       "      <td>41</td>\n",
       "      <td>M</td>\n",
       "      <td>Aggravated Assault</td>\n",
       "      <td>ADW W/FIREARM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>11/23/2019</td>\n",
       "      <td>21</td>\n",
       "      <td>F</td>\n",
       "      <td>Liquor Laws</td>\n",
       "      <td>OPEN ALCOHOLIC BEV IN PUBLIC PARK/PLACE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>11/27/2019</td>\n",
       "      <td>20</td>\n",
       "      <td>M</td>\n",
       "      <td>Driving Under Influence</td>\n",
       "      <td>DRUNK DRIVING ALCOHOL/DRUGS</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Arrest Date  Age Sex Code Charge Group Description  \\\n",
       "2   11/23/2019   23        F                  Robbery   \n",
       "3   04/30/2019   27        M                 Burglary   \n",
       "5   04/30/2019   41        M       Aggravated Assault   \n",
       "10  11/23/2019   21        F              Liquor Laws   \n",
       "13  11/27/2019   20        M  Driving Under Influence   \n",
       "\n",
       "                         Charge Description  \n",
       "2                                   ROBBERY  \n",
       "3                                  BURGLARY  \n",
       "5                             ADW W/FIREARM  \n",
       "10  OPEN ALCOHOLIC BEV IN PUBLIC PARK/PLACE  \n",
       "13              DRUNK DRIVING ALCOHOL/DRUGS  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Grabbing only the columns needed\n",
    "before_df = before_df[[\"Arrest Date\", \"Age\", \"Sex Code\", \"Charge Group Description\", \"Charge Description\"]]\n",
    "before_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Arrest Date                 object\n",
       "Age                          int64\n",
       "Sex Code                    object\n",
       "Charge Group Description    object\n",
       "Charge Description          object\n",
       "dtype: object"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Ensuring each column is defined correctly\n",
    "before_df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Miscellaneous Other Violations    140102\n",
       "Driving Under Influence           105346\n",
       "Narcotic Drug Laws                104853\n",
       "Drunkeness                         84795\n",
       "Liquor Laws                        37349\n",
       "Moving Traffic Violations          35801\n",
       "Prostitution/Allied                30661\n",
       "Disorderly Conduct                 28944\n",
       "Aggravated Assault                 22074\n",
       "Other Assaults                     18549\n",
       "Vehicle Theft                      17399\n",
       "Weapon (carry/poss)                16615\n",
       "Robbery                            14151\n",
       "Larceny                            11913\n",
       "Pre-Delinquency                     9475\n",
       "Burglary                            8543\n",
       "Sex (except rape/prst)              4747\n",
       "Fraud/Embezzlement                  4109\n",
       "Receive Stolen Property             3390\n",
       "Forgery/Counterfeit                 2949\n",
       "Against Family/Child                1324\n",
       "Gambling                             884\n",
       "Homicide                             806\n",
       "Disturbing the Peace                 595\n",
       "Rape                                 553\n",
       "Non-Criminal Detention               479\n",
       "Federal Offenses                     138\n",
       "Name: Charge Group Description, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Listing each Charge and counting each charge\n",
    "before_df['Charge Group Description'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "before_df = before_df.loc[(before_df['Charge Group Description'] == 'Homicide')\n",
    "                            |\n",
    "                            (before_df['Charge Group Description'] == 'Robbery')\n",
    "                            |\n",
    "                            (before_df['Charge Group Description'] == 'Rape')\n",
    "                            |\n",
    "                            (before_df['Charge Group Description'] == 'Burglary')\n",
    "                            |\n",
    "                            (before_df['Charge Group Description'] == 'Larceny')\n",
    "                            | \n",
    "                            (before_df['Charge Group Description'] == 'Vehicle Theft')\n",
    "                            |\n",
    "                            (before_df['Charge Group Description'] == 'Against Family/Child')\n",
    "                            |\n",
    "                            (before_df['Charge Group Description'] == 'Aggravated Assault')\n",
    "                            |\n",
    "                            (before_df['Charge Group Description'] == 'Other Assaults')]\n",
    "\n",
    "\n",
    "before_df                         "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Arrest Date</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex Code</th>\n",
       "      <th>Charge Group Description</th>\n",
       "      <th>Charge Description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2019-11-23</td>\n",
       "      <td>23</td>\n",
       "      <td>F</td>\n",
       "      <td>Robbery</td>\n",
       "      <td>ROBBERY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>2019-04-30</td>\n",
       "      <td>27</td>\n",
       "      <td>M</td>\n",
       "      <td>Burglary</td>\n",
       "      <td>BURGLARY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>2019-04-30</td>\n",
       "      <td>41</td>\n",
       "      <td>M</td>\n",
       "      <td>Aggravated Assault</td>\n",
       "      <td>ADW W/FIREARM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>2019-11-23</td>\n",
       "      <td>21</td>\n",
       "      <td>F</td>\n",
       "      <td>Liquor Laws</td>\n",
       "      <td>OPEN ALCOHOLIC BEV IN PUBLIC PARK/PLACE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>2019-11-27</td>\n",
       "      <td>20</td>\n",
       "      <td>M</td>\n",
       "      <td>Driving Under Influence</td>\n",
       "      <td>DRUNK DRIVING ALCOHOL/DRUGS</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345115</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>51</td>\n",
       "      <td>M</td>\n",
       "      <td>Moving Traffic Violations</td>\n",
       "      <td>DRIVE W/LIC SUSPEND/REVOKE 4 OTHER REASON</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345116</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>43</td>\n",
       "      <td>M</td>\n",
       "      <td>Narcotic Drug Laws</td>\n",
       "      <td>POSSESSION CONTROLLED SUBSTANCE FOR SALE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345117</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>36</td>\n",
       "      <td>M</td>\n",
       "      <td>Aggravated Assault</td>\n",
       "      <td>BATTERY W/GBI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345119</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>22</td>\n",
       "      <td>M</td>\n",
       "      <td>Driving Under Influence</td>\n",
       "      <td>DUI OF ALCOHOL &amp; DRUG</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345120</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>30</td>\n",
       "      <td>M</td>\n",
       "      <td>Other Assaults</td>\n",
       "      <td>OBSTRUCT/RESIST EXECUTIVE OFFICER</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>50825 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Arrest Date  Age Sex Code   Charge Group Description  \\\n",
       "2        2019-11-23   23        F                    Robbery   \n",
       "3        2019-04-30   27        M                   Burglary   \n",
       "5        2019-04-30   41        M         Aggravated Assault   \n",
       "10       2019-11-23   21        F                Liquor Laws   \n",
       "13       2019-11-27   20        M    Driving Under Influence   \n",
       "...             ...  ...      ...                        ...   \n",
       "1345115  2019-04-27   51        M  Moving Traffic Violations   \n",
       "1345116  2019-04-27   43        M         Narcotic Drug Laws   \n",
       "1345117  2019-04-27   36        M         Aggravated Assault   \n",
       "1345119  2019-04-27   22        M    Driving Under Influence   \n",
       "1345120  2019-04-27   30        M             Other Assaults   \n",
       "\n",
       "                                Charge Description  \n",
       "2                                          ROBBERY  \n",
       "3                                         BURGLARY  \n",
       "5                                    ADW W/FIREARM  \n",
       "10         OPEN ALCOHOLIC BEV IN PUBLIC PARK/PLACE  \n",
       "13                     DRUNK DRIVING ALCOHOL/DRUGS  \n",
       "...                                            ...  \n",
       "1345115  DRIVE W/LIC SUSPEND/REVOKE 4 OTHER REASON  \n",
       "1345116   POSSESSION CONTROLLED SUBSTANCE FOR SALE  \n",
       "1345117                              BATTERY W/GBI  \n",
       "1345119                      DUI OF ALCOHOL & DRUG  \n",
       "1345120          OBSTRUCT/RESIST EXECUTIVE OFFICER  \n",
       "\n",
       "[50825 rows x 5 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "before_df['Arrest Date'] = pd.to_datetime(before_df['Arrest Date'])\n",
    "covid = (before_df[before_df['Arrest Date'] >= pd.Timestamp(date(2019,1,1))])\n",
    "covid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Arrest Date</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex Code</th>\n",
       "      <th>Charge Group Description</th>\n",
       "      <th>Charge Description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2019-11-23</td>\n",
       "      <td>23</td>\n",
       "      <td>F</td>\n",
       "      <td>Robbery</td>\n",
       "      <td>ROBBERY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>2019-04-30</td>\n",
       "      <td>27</td>\n",
       "      <td>M</td>\n",
       "      <td>Burglary</td>\n",
       "      <td>BURGLARY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>2019-04-30</td>\n",
       "      <td>41</td>\n",
       "      <td>M</td>\n",
       "      <td>Aggravated Assault</td>\n",
       "      <td>ADW W/FIREARM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>2019-11-23</td>\n",
       "      <td>21</td>\n",
       "      <td>F</td>\n",
       "      <td>Liquor Laws</td>\n",
       "      <td>OPEN ALCOHOLIC BEV IN PUBLIC PARK/PLACE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>2019-11-27</td>\n",
       "      <td>20</td>\n",
       "      <td>M</td>\n",
       "      <td>Driving Under Influence</td>\n",
       "      <td>DRUNK DRIVING ALCOHOL/DRUGS</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345115</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>51</td>\n",
       "      <td>M</td>\n",
       "      <td>Moving Traffic Violations</td>\n",
       "      <td>DRIVE W/LIC SUSPEND/REVOKE 4 OTHER REASON</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345116</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>43</td>\n",
       "      <td>M</td>\n",
       "      <td>Narcotic Drug Laws</td>\n",
       "      <td>POSSESSION CONTROLLED SUBSTANCE FOR SALE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345117</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>36</td>\n",
       "      <td>M</td>\n",
       "      <td>Aggravated Assault</td>\n",
       "      <td>BATTERY W/GBI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345119</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>22</td>\n",
       "      <td>M</td>\n",
       "      <td>Driving Under Influence</td>\n",
       "      <td>DUI OF ALCOHOL &amp; DRUG</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345120</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>30</td>\n",
       "      <td>M</td>\n",
       "      <td>Other Assaults</td>\n",
       "      <td>OBSTRUCT/RESIST EXECUTIVE OFFICER</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>41903 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Arrest Date  Age Sex Code   Charge Group Description  \\\n",
       "2        2019-11-23   23        F                    Robbery   \n",
       "3        2019-04-30   27        M                   Burglary   \n",
       "5        2019-04-30   41        M         Aggravated Assault   \n",
       "10       2019-11-23   21        F                Liquor Laws   \n",
       "13       2019-11-27   20        M    Driving Under Influence   \n",
       "...             ...  ...      ...                        ...   \n",
       "1345115  2019-04-27   51        M  Moving Traffic Violations   \n",
       "1345116  2019-04-27   43        M         Narcotic Drug Laws   \n",
       "1345117  2019-04-27   36        M         Aggravated Assault   \n",
       "1345119  2019-04-27   22        M    Driving Under Influence   \n",
       "1345120  2019-04-27   30        M             Other Assaults   \n",
       "\n",
       "                                Charge Description  \n",
       "2                                          ROBBERY  \n",
       "3                                         BURGLARY  \n",
       "5                                    ADW W/FIREARM  \n",
       "10         OPEN ALCOHOLIC BEV IN PUBLIC PARK/PLACE  \n",
       "13                     DRUNK DRIVING ALCOHOL/DRUGS  \n",
       "...                                            ...  \n",
       "1345115  DRIVE W/LIC SUSPEND/REVOKE 4 OTHER REASON  \n",
       "1345116   POSSESSION CONTROLLED SUBSTANCE FOR SALE  \n",
       "1345117                              BATTERY W/GBI  \n",
       "1345119                      DUI OF ALCOHOL & DRUG  \n",
       "1345120          OBSTRUCT/RESIST EXECUTIVE OFFICER  \n",
       "\n",
       "[41903 rows x 5 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "covid['Arrest Date'] = pd.to_datetime(covid['Arrest Date'])\n",
    "pre1covid = (covid[covid['Arrest Date'] < pd.Timestamp(date(2020,1,1))])\n",
    "         \n",
    "pre1covid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Arrest Date</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex Code</th>\n",
       "      <th>Charge Group Description</th>\n",
       "      <th>Charge Description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>33</td>\n",
       "      <td>2019-04-16</td>\n",
       "      <td>54</td>\n",
       "      <td>F</td>\n",
       "      <td>Miscellaneous Other Violations</td>\n",
       "      <td>ILLEGAL POSSESSION OF SHOPPING CART</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>34</td>\n",
       "      <td>2019-04-26</td>\n",
       "      <td>57</td>\n",
       "      <td>M</td>\n",
       "      <td>Drunkeness</td>\n",
       "      <td>DRINKING IN PUBLIC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>35</td>\n",
       "      <td>2019-04-26</td>\n",
       "      <td>35</td>\n",
       "      <td>M</td>\n",
       "      <td>Miscellaneous Other Violations</td>\n",
       "      <td>ILLEGAL POSSESSION OF SHOPPING CART</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>37</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>35</td>\n",
       "      <td>M</td>\n",
       "      <td>Liquor Laws</td>\n",
       "      <td>DRINKING ALCOHOL*******</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>61</td>\n",
       "      <td>2019-04-25</td>\n",
       "      <td>27</td>\n",
       "      <td>F</td>\n",
       "      <td>Liquor Laws</td>\n",
       "      <td>OPEN ALCOHOLIC BEV IN PUBLIC PARK/PLACE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345115</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>51</td>\n",
       "      <td>M</td>\n",
       "      <td>Moving Traffic Violations</td>\n",
       "      <td>DRIVE W/LIC SUSPEND/REVOKE 4 OTHER REASON</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345116</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>43</td>\n",
       "      <td>M</td>\n",
       "      <td>Narcotic Drug Laws</td>\n",
       "      <td>POSSESSION CONTROLLED SUBSTANCE FOR SALE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345117</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>36</td>\n",
       "      <td>M</td>\n",
       "      <td>Aggravated Assault</td>\n",
       "      <td>BATTERY W/GBI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345119</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>22</td>\n",
       "      <td>M</td>\n",
       "      <td>Driving Under Influence</td>\n",
       "      <td>DUI OF ALCOHOL &amp; DRUG</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345120</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>30</td>\n",
       "      <td>M</td>\n",
       "      <td>Other Assaults</td>\n",
       "      <td>OBSTRUCT/RESIST EXECUTIVE OFFICER</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>13253 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Arrest Date  Age Sex Code        Charge Group Description  \\\n",
       "33       2019-04-16   54        F  Miscellaneous Other Violations   \n",
       "34       2019-04-26   57        M                      Drunkeness   \n",
       "35       2019-04-26   35        M  Miscellaneous Other Violations   \n",
       "37       2019-04-27   35        M                     Liquor Laws   \n",
       "61       2019-04-25   27        F                     Liquor Laws   \n",
       "...             ...  ...      ...                             ...   \n",
       "1345115  2019-04-27   51        M       Moving Traffic Violations   \n",
       "1345116  2019-04-27   43        M              Narcotic Drug Laws   \n",
       "1345117  2019-04-27   36        M              Aggravated Assault   \n",
       "1345119  2019-04-27   22        M         Driving Under Influence   \n",
       "1345120  2019-04-27   30        M                  Other Assaults   \n",
       "\n",
       "                                Charge Description  \n",
       "33             ILLEGAL POSSESSION OF SHOPPING CART  \n",
       "34                              DRINKING IN PUBLIC  \n",
       "35             ILLEGAL POSSESSION OF SHOPPING CART  \n",
       "37                         DRINKING ALCOHOL*******  \n",
       "61         OPEN ALCOHOLIC BEV IN PUBLIC PARK/PLACE  \n",
       "...                                            ...  \n",
       "1345115  DRIVE W/LIC SUSPEND/REVOKE 4 OTHER REASON  \n",
       "1345116   POSSESSION CONTROLLED SUBSTANCE FOR SALE  \n",
       "1345117                              BATTERY W/GBI  \n",
       "1345119                      DUI OF ALCOHOL & DRUG  \n",
       "1345120          OBSTRUCT/RESIST EXECUTIVE OFFICER  \n",
       "\n",
       "[13253 rows x 5 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "precovid = (pre1covid[pre1covid['Arrest Date'] < pd.Timestamp(date(2019,4,30))])\n",
    "precovid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Arrest Date</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex Code</th>\n",
       "      <th>Charge Group Description</th>\n",
       "      <th>Charge Description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>63157</td>\n",
       "      <td>2020-02-06</td>\n",
       "      <td>22</td>\n",
       "      <td>F</td>\n",
       "      <td>Fraud/Embezzlement</td>\n",
       "      <td>POSS ID OF 10 OR MORE PRSN W/INTENT DEFRAU</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>65878</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>16</td>\n",
       "      <td>M</td>\n",
       "      <td>Larceny</td>\n",
       "      <td>GRAND THEFT PERSON</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>65880</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>69</td>\n",
       "      <td>M</td>\n",
       "      <td>Other Assaults</td>\n",
       "      <td>TERRORIZE CAUSING FEAR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>65881</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>20</td>\n",
       "      <td>F</td>\n",
       "      <td>Larceny</td>\n",
       "      <td>THEFT FROM VEHICLE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>66021</td>\n",
       "      <td>2020-01-03</td>\n",
       "      <td>28</td>\n",
       "      <td>M</td>\n",
       "      <td>Narcotic Drug Laws</td>\n",
       "      <td>POSSESS CONTROLLED SUBSTANCE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>88604</td>\n",
       "      <td>2020-04-03</td>\n",
       "      <td>34</td>\n",
       "      <td>M</td>\n",
       "      <td>Vehicle Theft</td>\n",
       "      <td>TAKE VEHICLE W/O OWNER'S CONSENT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>88605</td>\n",
       "      <td>2020-04-02</td>\n",
       "      <td>21</td>\n",
       "      <td>M</td>\n",
       "      <td>Other Assaults</td>\n",
       "      <td>TERRORIZE CAUSING FEAR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>88606</td>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>41</td>\n",
       "      <td>M</td>\n",
       "      <td>Vehicle Theft</td>\n",
       "      <td>TAKE VEHICLE W/O OWNER'S CONSENT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>88612</td>\n",
       "      <td>2020-02-20</td>\n",
       "      <td>23</td>\n",
       "      <td>M</td>\n",
       "      <td>Liquor Laws</td>\n",
       "      <td>DRINKING ALCOHOL*******</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>88613</td>\n",
       "      <td>2020-04-08</td>\n",
       "      <td>46</td>\n",
       "      <td>M</td>\n",
       "      <td>Miscellaneous Other Violations</td>\n",
       "      <td>DAMAGE PROPERTY</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8922 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Arrest Date  Age Sex Code        Charge Group Description  \\\n",
       "63157  2020-02-06   22        F              Fraud/Embezzlement   \n",
       "65878  2020-01-01   16        M                         Larceny   \n",
       "65880  2020-01-01   69        M                  Other Assaults   \n",
       "65881  2020-01-01   20        F                         Larceny   \n",
       "66021  2020-01-03   28        M              Narcotic Drug Laws   \n",
       "...           ...  ...      ...                             ...   \n",
       "88604  2020-04-03   34        M                   Vehicle Theft   \n",
       "88605  2020-04-02   21        M                  Other Assaults   \n",
       "88606  2020-04-01   41        M                   Vehicle Theft   \n",
       "88612  2020-02-20   23        M                     Liquor Laws   \n",
       "88613  2020-04-08   46        M  Miscellaneous Other Violations   \n",
       "\n",
       "                               Charge Description  \n",
       "63157  POSS ID OF 10 OR MORE PRSN W/INTENT DEFRAU  \n",
       "65878                          GRAND THEFT PERSON  \n",
       "65880                      TERRORIZE CAUSING FEAR  \n",
       "65881                          THEFT FROM VEHICLE  \n",
       "66021                POSSESS CONTROLLED SUBSTANCE  \n",
       "...                                           ...  \n",
       "88604            TAKE VEHICLE W/O OWNER'S CONSENT  \n",
       "88605                      TERRORIZE CAUSING FEAR  \n",
       "88606            TAKE VEHICLE W/O OWNER'S CONSENT  \n",
       "88612                     DRINKING ALCOHOL*******  \n",
       "88613                             DAMAGE PROPERTY  \n",
       "\n",
       "[8922 rows x 5 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "postcovid = (covid[covid['Arrest Date'] >= pd.Timestamp(date(2020,1,1))])\n",
    "         \n",
    "postcovid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Miscellaneous Other Violations    2309\n",
       "Driving Under Influence           2165\n",
       "Narcotic Drug Laws                2021\n",
       "Aggravated Assault                 743\n",
       "Moving Traffic Violations          715\n",
       "Liquor Laws                        706\n",
       "Vehicle Theft                      697\n",
       "Other Assaults                     652\n",
       "Prostitution/Allied                577\n",
       "Weapon (carry/poss)                558\n",
       "Drunkeness                         501\n",
       "Robbery                            449\n",
       "Larceny                            313\n",
       "Burglary                           208\n",
       "Disorderly Conduct                 193\n",
       "Sex (except rape/prst)             109\n",
       "Fraud/Embezzlement                 100\n",
       "Receive Stolen Property             67\n",
       "Forgery/Counterfeit                 54\n",
       "Against Family/Child                36\n",
       "Homicide                            22\n",
       "Rape                                17\n",
       "Disturbing the Peace                11\n",
       "Gambling                            10\n",
       "Non-Criminal Detention               8\n",
       "Federal Offenses                     6\n",
       "Pre-Delinquency                      6\n",
       "Name: Charge Group Description, dtype: int64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "precovid['Charge Group Description'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Miscellaneous Other Violations    1523\n",
       "Driving Under Influence           1473\n",
       "Narcotic Drug Laws                1360\n",
       "Prostitution/Allied                587\n",
       "Aggravated Assault                 544\n",
       "Vehicle Theft                      468\n",
       "Other Assaults                     438\n",
       "Weapon (carry/poss)                410\n",
       "Moving Traffic Violations          406\n",
       "Drunkeness                         341\n",
       "Liquor Laws                        336\n",
       "Robbery                            290\n",
       "Larceny                            206\n",
       "Burglary                           143\n",
       "Disorderly Conduct                  90\n",
       "Fraud/Embezzlement                  88\n",
       "Sex (except rape/prst)              57\n",
       "Receive Stolen Property             49\n",
       "Against Family/Child                33\n",
       "Forgery/Counterfeit                 31\n",
       "Gambling                            14\n",
       "Homicide                            14\n",
       "Rape                                12\n",
       "Federal Offenses                     4\n",
       "Disturbing the Peace                 2\n",
       "Pre-Delinquency                      2\n",
       "Non-Criminal Detention               1\n",
       "Name: Charge Group Description, dtype: int64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "postcovid['Charge Group Description'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "crimes = [\"Homicide\", \"Rape\", \"Robbery\", \"Burglary\", \"Larceny\", \"Vehicle Theft\", \"Against Family/Child\", \"Assault\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Arrest Date</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex Code</th>\n",
       "      <th>Charge Group Description</th>\n",
       "      <th>Charge Description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>33</td>\n",
       "      <td>2019-04-16</td>\n",
       "      <td>54</td>\n",
       "      <td>F</td>\n",
       "      <td>Miscellaneous Other Violations</td>\n",
       "      <td>ILLEGAL POSSESSION OF SHOPPING CART</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>34</td>\n",
       "      <td>2019-04-26</td>\n",
       "      <td>57</td>\n",
       "      <td>M</td>\n",
       "      <td>Drunkeness</td>\n",
       "      <td>DRINKING IN PUBLIC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>35</td>\n",
       "      <td>2019-04-26</td>\n",
       "      <td>35</td>\n",
       "      <td>M</td>\n",
       "      <td>Miscellaneous Other Violations</td>\n",
       "      <td>ILLEGAL POSSESSION OF SHOPPING CART</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>37</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>35</td>\n",
       "      <td>M</td>\n",
       "      <td>Liquor Laws</td>\n",
       "      <td>DRINKING ALCOHOL*******</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>61</td>\n",
       "      <td>2019-04-25</td>\n",
       "      <td>27</td>\n",
       "      <td>F</td>\n",
       "      <td>Liquor Laws</td>\n",
       "      <td>OPEN ALCOHOLIC BEV IN PUBLIC PARK/PLACE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345115</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>51</td>\n",
       "      <td>M</td>\n",
       "      <td>Moving Traffic Violations</td>\n",
       "      <td>DRIVE W/LIC SUSPEND/REVOKE 4 OTHER REASON</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345116</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>43</td>\n",
       "      <td>M</td>\n",
       "      <td>Narcotic Drug Laws</td>\n",
       "      <td>POSSESSION CONTROLLED SUBSTANCE FOR SALE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345117</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>36</td>\n",
       "      <td>M</td>\n",
       "      <td>Assault</td>\n",
       "      <td>BATTERY W/GBI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345119</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>22</td>\n",
       "      <td>M</td>\n",
       "      <td>Driving Under Influence</td>\n",
       "      <td>DUI OF ALCOHOL &amp; DRUG</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1345120</td>\n",
       "      <td>2019-04-27</td>\n",
       "      <td>30</td>\n",
       "      <td>M</td>\n",
       "      <td>Assault</td>\n",
       "      <td>OBSTRUCT/RESIST EXECUTIVE OFFICER</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>13253 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Arrest Date  Age Sex Code        Charge Group Description  \\\n",
       "33       2019-04-16   54        F  Miscellaneous Other Violations   \n",
       "34       2019-04-26   57        M                      Drunkeness   \n",
       "35       2019-04-26   35        M  Miscellaneous Other Violations   \n",
       "37       2019-04-27   35        M                     Liquor Laws   \n",
       "61       2019-04-25   27        F                     Liquor Laws   \n",
       "...             ...  ...      ...                             ...   \n",
       "1345115  2019-04-27   51        M       Moving Traffic Violations   \n",
       "1345116  2019-04-27   43        M              Narcotic Drug Laws   \n",
       "1345117  2019-04-27   36        M                         Assault   \n",
       "1345119  2019-04-27   22        M         Driving Under Influence   \n",
       "1345120  2019-04-27   30        M                         Assault   \n",
       "\n",
       "                                Charge Description  \n",
       "33             ILLEGAL POSSESSION OF SHOPPING CART  \n",
       "34                              DRINKING IN PUBLIC  \n",
       "35             ILLEGAL POSSESSION OF SHOPPING CART  \n",
       "37                         DRINKING ALCOHOL*******  \n",
       "61         OPEN ALCOHOLIC BEV IN PUBLIC PARK/PLACE  \n",
       "...                                            ...  \n",
       "1345115  DRIVE W/LIC SUSPEND/REVOKE 4 OTHER REASON  \n",
       "1345116   POSSESSION CONTROLLED SUBSTANCE FOR SALE  \n",
       "1345117                              BATTERY W/GBI  \n",
       "1345119                      DUI OF ALCOHOL & DRUG  \n",
       "1345120          OBSTRUCT/RESIST EXECUTIVE OFFICER  \n",
       "\n",
       "[13253 rows x 5 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 2019 Bar Graph \n",
    "precovid = precovid.replace(\n",
    "    {\n",
    "        \"Aggravated Assault\": \"Assault\",\n",
    "        \"Other Assaults\": \"Assault\"\n",
    "    })\n",
    "precovid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAWAAAAFgCAYAAACFYaNMAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy8QZhcZAAAgAElEQVR4nO3dd5xcVf3/8deb0EInECEQkBYpoqGE9gMFQZCi9K7AF8FIU7ACiiBiwYaABUSpFhABKQJCpIoIJIAQivQWaui9f35/fM6Qy2Z3M9ndmbubfT8fj33szJ27cz+7O/OZc88953MUEZiZWfvNVHcAZmaDlROwmVlNnIDNzGriBGxmVhMnYDOzmjgBm5nVxAnYrA9J+piku+qOwwYGJ2DrVyTNJulESQ9JeknSzZI26bDPBpL+J+lVSVdI+mDlse0lXVseu7KT5/+MpNskvVz2W2Ea8awu6SJJz0t6VtINknbvav+I+FdELNuDX90GISdg629mBh4B1gXmBb4DnClpCQBJCwLnlO3DgAnAXyo//yxwNHBkxyeWNAr4E7AXMB9wAXC+pJk7C0TSWsDlwFXAMsACwN7AJl3s3+nzmHUpIvzlr379BdwKbFNujwWurTw2J/AasFyHn9kTuLLDtv2ACyv3Zyo/u0EXx70G+HU3ca0HTAIOBJ4A/tDYVtnnQeAb5Xd4BTgRWAi4GHgJ+Ccwf2X/NYFrgeeBW4D16v77+6t1X24BW78maSHgQ8DtZdOHycQEQES8AtxXtk/z6cpXx/srdnLcOYC1gLOm8ZwLky3xD5IfDp3ZBtiQ/D0+QybfbwELkh8CXy7HXBS4EPh+ec6vA2dLGj7tX80GIidg67ckzUJ2GZwaEf8rm+cCXuiw6wvA3E085ThgXUnrSZqVTIKzAnN0su/85Pvj8Wk857vAYRHxRkS81sU+v4yIJyPiUeBfwPURcXNEvAH8DVi57Pc54KKIuCgi3o2IcWQXy6ZN/G42ADkBW78kaSbylP5Nsuug4WVgng67z0OeznerJPHdgF+RiXVB4A6yG6Gj58jkOmIaTzs5Il6fxj5PVm6/1sn9ucrtDwLblQt+z0t6HliniRhsgPJFA+t3JIkpfaWbRsRblYdvJ5NoY985gaWZ0kXRrYg4i9KtIGk+4PPA+E72e1XSf8jugyu6e8pmjtukR4A/RMQX+vA5rR9zC9j6o+OA5YHPdHJa/zdgRUnbSJodOBS4tdFFIWlI2T4zMJOk2UtXBuXxVcs+w4HfAhdUujc6+ibwf5K+IWmB8vOjJZ3Rl79sxR+Bz0j6VOP3KN0lI1t0PKuZE7D1K2VM7xeBlYAnynjdlyV9FiAiJpOt0h+Q3QRrADtWnmIX8rT+OOBj5fbvKo8fQ44wuKt877K1GRHXAuuXr/slPQucAFzU+9+00+M9AmxB9k1PJlvE38Dv0xmWIlyQ3cysDv5kNTOriROwmVlNnIDNzGriBGxmVpMZchzwggsuGEsssUTdYZiZAXDjjTc+HRFTTSmfIRPwEksswYQJE+oOw8wMAEkPdbbdXRBmZjVxAjYzq4kTsJlZTZyAzcxq0rIELOkkSU9Juq2Tx74uKcryMigdK+leSbdKWqWy726S7ilfu3V8LjOzgaqVLeBTgI07bpS0GLk6wMOVzZsAo8rXWLKQCpKGAYeRBVdWBw6TNH8LYzYza5uWJeCIuJpcILGjX5Bl/qpVgLYATot0HTCfpBHAp4BxEfFsRDxHrmgwVVI3MxuI2toHLGlz4NGIuKXDQ4uSpfcaJpVtXW3v7LnHSpogacLkyZP7MGozs9Zo20SMssjht4GNOnu4k23RzfapN0acQNZqZcyYMa6xaTZYfHerNh7rb336dO1sAS8NLAncIulBYCRwk6SFyZbtYpV9RwKPdbPdzGzAa1sCjoiJEfGBiFgiIpYgk+sqEfEEcD6waxkNsSbwQkQ8DlwCbCRp/nLxbaOyzcxswGvlMLTTgf8Ay0qaJGmPbna/CLgfuJdcPmYfgIh4FjiCXDRxPPC9ss3MbMBrWR9wROw0jceXqNwOYN8u9jsJOKlPgzMz6wc8E87MrCZOwGZmNXECNjOriROwmVlNnIDNzGriBGxmVhMnYDOzmjgBm5nVxAnYzKwmTsBmZjVxAjYzq4kTsJlZTZyAzcxq4gRsZlYTJ2Azs5o4AZuZ1cQJ2MysJk7AZmY1cQI2M6tJKxflPEnSU5Juq2z7qaT/SbpV0t8kzVd57GBJ90q6S9KnKts3LtvulXRQq+I1M2u3VraATwE27rBtHLBiRHwUuBs4GEDSCsCOwIfLz/xG0hBJQ4BfA5sAKwA7lX3NzAa8liXgiLgaeLbDtksj4u1y9zpgZLm9BXBGRLwREQ+Qy9OvXr7ujYj7I+JN4Iyyr5nZgFdnH/DngYvL7UWBRyqPTSrbuto+FUljJU2QNGHy5MktCNfMrG/VkoAlfRt4G/hTY1Mnu0U326feGHFCRIyJiDHDhw/vm0DNzFpo5nYfUNJuwKeBDSKikUwnAYtVdhsJPFZud7XdzGxAa2sLWNLGwIHA5hHxauWh84EdJc0maUlgFHADMB4YJWlJSbOSF+rOb2fMZmat0rIWsKTTgfWABSVNAg4jRz3MBoyTBHBdROwVEbdLOhO4g+ya2Dci3inPsx9wCTAEOCkibm9VzGZm7dSyBBwRO3Wy+cRu9v8B8INOtl8EXNSHoZmZ9QueCWdmVhMnYDOzmjgBm5nVpKkELOmDkj5Zbg+VNHdrwzIzm/FNMwFL+gJwFvDbsmkkcG4rgzIzGwyaaQHvC6wNvAgQEfcAH2hlUGZmg0EzCfiNUggHAEkz08V0YDMza14zCfgqSd8ChkraEPgrcEFrwzIzm/E1k4APAiYDE4EvkpMiDmllUGZmg8E0Z8JFxLvA78qXmZn1kWZGQXxa0s2SnpX0oqSXJL3YjuDMzGZkzdSCOBrYGphYKR9pZma91Ewf8CPAbU6+ZmZ9q5kW8DeBiyRdBbzR2BgRR7UsKjOzQaCZBPwD4GVgdmDW1oZjZjZ4NJOAh0XERi2PxMxskGmmD/ifkpyAzcz6WLO1IP4h6TUPQzMz6zvTTMARMXdEzBQRQyNinnJ/nmn9nKSTJD0l6bbKtmGSxkm6p3yfv2yXpGMl3SvpVkmrVH5mt7L/PWVFZTOzGUKXCVjScuX7Kp19NfHcpwAbd9h2EHBZRIwCLiv3ATYhV0IeBYwFjivHHkYu5rkGsDpwWCNpm5kNdN1dhPsqmQx/3sljAazf3RNHxNWSluiweQtypWSAU4EryWXqtwBOK2ONr5M0n6QRZd9xEfEsgKRxZFI/vbtjm5kNBF0m4IgYK2km4JCI+HcfHW+hiHi8PP/jkhp1hRclJ3w0TCrbuto+FUljyQ8MFl988T4K18ysdbrtAy6FeH7WhjjU2eG72T71xogTImJMRIwZPnx4nwZnZtYKzYyCuFTSNpI6S4bT68nStUD5/lTZPglYrLLfSOCxbrabmQ14zSTgr5JF2N/og2Fo5wONkQy7AedVtu9aRkOsCbxQuiouATaSNH+5+LZR2WZmNuA1Uw+4RysgSzqdvIi2oKRJ5GiGI4EzJe0BPAxsV3a/CNgUuBd4Fdi9HPtZSUcA48t+32tckDMzG+i6TMCSPgXMHRFnddi+MzA5IsZ198QRsVMXD23Qyb5BTvjo7HlOAk7q7lhmZgNRd10QhwNXdbL9cuB7rQnHzGzw6C4BzxERkztujIgngDlbF5KZ2eDQXQKevSxB/z6SZgGGti4kM7PBobsEfA7wO0nvtXbL7ePLY2Zm1gvdJeBDgCeBhyTdKOlG4EFyiXovS29m1kvdTUV+GzhI0uHAMmXzvRHxWlsiMzObwTUzDvg1YGIbYjEzG1SamQlnZmYt4ARsZlaTZhblRNKiwAer+0fE1a0KysxsMJhmApb0Y2AH4A7gnbI5ACdgM7NeaKYFvCWwbES80epgzMwGk2b6gO8HZml1IGZmg0131dB+SXY1vAr8V9JlwHut4Ij4cuvDMzObcXXXBTGhfL+RLJhuZmZ9qLuZcKfCe/UfXo+Id8r9IcBs7QnPzGzG1Uwf8GW8v/rZUOCfrQnHzGzwaCYBzx4RLzfulNtztC4kM7PBoZkE/IqkVRp3JK0KuCCPmVkvNTMO+ADgr5Iay8GPICdm9JikrwB7kqMsJpKLcI4AzgCGATcBu0TEm5JmA04DVgWeAXaIiAd7c3wzs/5gmi3giBgPLAfsDewDLB8RN/b0gGVa85eBMRGxIjAE2BH4MfCLiBgFPAfsUX5kD+C5iFgG+EXZz8xswGu2GM+ywArAysBOknbt5XFnBoaWJY/mAB4H1gcaKzCfSs7AA9ii3Kc8voEk9fL4Zma1m2YClnQY8Mvy9QngJ8DmPT1gRDwK/Ax4mEy8L5BjjZ8vReABJgGLltuLAo+Un3277L9AJ3GOlTRB0oTJk6daS9TMrN9ppgW8LbAB8ERE7A6MphfjgCXNT7ZqlwQWIVdY3qSTXaPxI908NmVDxAkRMSYixgwfPryn4ZmZtU0zCfi1iHgXeFvSPMBTwFK9OOYngQciYnJEvEUu8Pn/gPkqqzCPBBoX/SYBiwGUx+cFnu3F8c3M+oVmEvAESfMBvyO7Cm4CbujFMR8G1pQ0R+nL3YAsdXkF2doG2A04r9w+v9ynPH55REzVAjYzG2iaWRNun3LzeEn/AOaJiFt7esCIuF7SWWQifxu4GTgBuBA4Q9L3y7YTy4+cCPxB0r1ky3fHnh7bzKw/6a4a2uci4o/l9toR8e/G+FtJ+0XEr3p60Ig4DDisw+b7gdU72fd1YLueHsvMrL/qrgviq5Xbv+zw2OdbEIuZ2aDSXQJWF7c7u29mZtOpuwQcXdzu7L6ZmU2n7i7CLSfpVrK1u3S5Tbnfm2FoZmZG9wl4+bZFYWY2CHW3IsZD7QzEzGywabYYj5mZ9TEnYDOzmnQ3EeOyiNhA0o8j4sB2BmVm3fhzG0eB7uwBT63U3UW4EZLWBTaXdAYdxv5GxE0tjczMbAbXXQI+FDiIrEx2VIfHgiygbmZmPdTdKIizgLMkfScijmhjTGZmg0Iz1dCOkLQ58PGy6cqI+HtrwzIzm/E1syTRj4D9yZq9dwD7l21mZtYLzSxLvxmwUlkVA0mnkvV6D25lYGZmM7pmxwHPV7k9bysCMTMbbJppAf8IuFnSFeRQtI/j1q+ZWa81cxHudElXAquRCfjAiHii1YGZmc3omuqCiIjHI+L8iDivL5KvpPkknSXpf5LulLSWpGGSxkm6p3yfv+wrScdKulfSrZJW6e3xzcz6g7pqQRwD/CMilgNGA3eSkz4ui4hRwGXlPsAmwKjyNRY4rv3hmpn1vbYnYEnzkP3IJwJExJsR8TywBXBq2e1UYMtyewvgtEjXAfNJGtHmsM3M+ly3CVjSTJJu6+NjLgVMBk6WdLOk30uaE1goIh6H7PIAPlD2XxR4pPLzk8q2jrGOlTRB0oTJkyf3cchmZn2v2wRcxv7eImnxPjzmzMAqwHERsTLwClO6GzrTWemnqUo0RcQJETEmIsYMHz68byI1M2uhZoahjQBul3QDmSwBiIjNe3jMScCkiLi+3D+LTMBPShoREY+XLoanKvsvVvn5kcBjPTy2mVm/0UwCPrwvDxgRT0h6RNKyEXEXsAFTpjnvBhxZvp9XfuR8YL9SEnMN4IVGV4WZ2UDWzDjgqyR9EBgVEf+UNAcwpJfH/RLwJ0mzAvcDu5PdIWdK2gN4GNiu7HsRsClwL/Bq2dfMbMCbZgKW9AVy+NcwYGnyAtjxZMu1RyLiv8CYTh6a6jkjIoB9e3osM7P+qplhaPsCawMvAkTEPUwZoWBmZj3UTAJ+IyLebNyRNDOdjEIwM7Pp00wCvkrSt4ChkjYE/gpc0NqwzMxmfM0k4IPIiRMTgS+SF8UOaWVQZmaDQTOjIN4tRdivJ7se7ioXxszMrBeaGQWxGTnq4T5yVtqSkr4YERe3OjgzsxlZMxMxfg58IiLuBZC0NHAh4ARsZtYLzfQBP9VIvsX9TJkmbGZmPdRlC1jS1uXm7ZIuAs4k+4C3A8a3ITYzsxlad10Qn6ncfhJYt9yeDMzfsojMzAaJLhNwRLjmgplZCzUzCmJJsnjOEtX9e1GO0szMaG4UxLnk8kEXAO+2Nhwzs8GjmQT8ekQc2/JIzMwGmWYS8DGSDgMuBd5obIyIm1oWlZnZINBMAv4IsAuwPlO6IKLctxnYMc8d07Zj7T///m07lll/0UwC3gpYqlqS0szMeq+ZmXC3APO1OhAzs8GmmRbwQsD/JI3n/X3AHoZmZtYLzSTgw1pxYElDgAnAoxHx6TLe+Axy7bmbgF0i4k1JswGnAasCzwA7RMSDrYjJzKydmloVuUXH3h+4E5in3P8x8IuIOEPS8cAewHHl+3MRsYykHct+O7QoJjOztplmH7CklyS9WL5el/SOpBd7c1BJI4HNgN+X+yJHVZxVdjkV2LLc3qLcpzy+QdnfzGxAa6YFPHf1vqQtgdV7edyjgW8CjedeAHg+It4u9ycBi5bbiwKPlFjelvRC2f/pDnGNBcYCLL744r0Mz8ys9ZoZBfE+EXEuvRgDLOnTZI3hG6ubOztUE49V4zohIsZExJjhw4f3NDwzs7ZpphjP1pW7MwFj6N2y9GsDm0vaFJid7AM+GphP0sylFTwSeKzsPwlYDJgkaWZgXuDZXhzfzKxfaKYF/JnK16eAl8h+2R6JiIMjYmRELAHsCFweEZ8FrgC2LbvtBpxXbp9f7lMev9yLgprZjKCZPuB21QU+EDhD0veBm8kKbJTvf5B0L9ny3bFN8ZiZtVR3SxId2s3PRUQc0duDR8SVwJXl9v10cnEvIl4nl0EyM5uhdNcCfqWTbXOS43IXAHqdgM3MBrPuliT6eeO2pLnJiRO7k7PVft7Vz5mZWXO67QOWNAz4KvBZcjLEKhHxXDsCMzOb0XXXB/xTYGvgBOAjEfFy26IyMxsEuhuG9jVgEeAQ4LHKdOSXejsV2czMuu8Dnu5ZcmZm1rxmylGaGZ3PiW8VzzQaHNzKNTOriROwmVlNnIDNzGriBGxmVhMnYDOzmjgBm5nVxAnYzKwmTsBmZjVxAjYzq4kTsJlZTZyAzcxq0vYELGkxSVdIulPS7ZL2L9uHSRon6Z7yff6yXZKOlXSvpFslrdLumM3MWqGOFvDbwNciYnlgTWBfSSsABwGXRcQo4LJyH2ATYFT5Ggsc1/6Qzcz6XturoUXE48Dj5fZLku4EFiWXul+v7HYquVjngWX7aWUp+uskzSdpRHkeGwTOuat9/+qtlx3RtmOZ1doHLGkJYGXgemChRlIt3z9QdlsUeKTyY5PKto7PNVbSBEkTJk+e3Mqwzcz6RG0JWNJcwNnAARHR3QobnZVhnapcakScEBFjImLM8OHD+ypMM7OWqSUBS5qFTL5/iohzyuYnJY0oj48AnirbJwGLVX58JPBYu2I1M2uVOkZBCDgRuDMijqo8dD6wW7m9G3BeZfuuZTTEmsAL7v81sxlBHUsSrQ3sAkyU9N+y7VvAkcCZkvYAHga2K49dBGwK3Au8Cuze3nDNzFqjjlEQ19D18lobdLJ/APu2NCgzsxp4JpyZWU2cgM3MauIEbGZWEydgM7OaOAGbmdXECdjMrCZOwGZmNXECNjOriROwmVlNnIDNzGriBGxmVhMnYDOzmjgBm5nVxAnYzKwmTsBmZjVxAjYzq4kTsJlZTepYksjMZghdLWzTClMthD5DcAvYzKwmA6YFLGlj4BhgCPD7iDiyr49xuA7v66fs0mFxWNcPumFhNigMiBawpCHAr4FNgBWAnSStUG9UZma9MyASMLA6cG9E3B8RbwJnAFvUHJOZWa8oV33v3yRtC2wcEXuW+7sAa0TEfpV9xgJjy91lgbvaFN6CwNNtOlZ3HMf79Zc4oP/E4jjer51xfDAihnfcOFD6gDvrFX3fJ0dEnACc0J5wppA0ISLGtPu4jmNgxAH9JxbH0f/iGChdEJOAxSr3RwKP1RSLmVmfGCgJeDwwStKSkmYFdgTOrzkmM7NeGRBdEBHxtqT9gEvIYWgnRcTtNYfV0PZujy44jvfrL3FA/4nFcbxf7XEMiItwZmYzooHSBWFmNsNxAjYzq4kTsNkgJ2mIpBF1xzEYOQHboCBpFklzl9vtrLbx3vHKCJ5+Q9Ic5eZqwN5lW7+6MC9pU0mfbOHzD2nVczfDCbiPVN5kQyWtLGktSaNqiGO2dieY7kj6saSPltttj6tyzPWB3QGivivPe0r6QSMRS6r7/beBpL8ApwGPQo44ApA0uo7XbyeWA34i6V+Svi5pmb540srrYkNJo/viOXui7hfAjKTxtzwE2Au4lHzTI2meVh648UaWtBPwFeBaSWu28pjNKK2LWYCDJK1UR+KrHPM1YBdJp0hapMTXlg+ESgw3kAnlMElDIuLddhy/M5IWJic4/QN4F9hP0jnlNQRwEO+f/FSLiDgK+BRZWmB34GxJ4yTtJmlYT56z/N8/IWlT4Kd0mI4sacF2fTg6AfeRiHin/GO3jogvkpNHbiwP/1LS6i089ruShgLfBK4B5gKeKq3x7Vr9AdBNXO9ExFeBfwJHSdq+8mHR1tdeRFwdEasBDwBjJS3Q7g+EiJhATiJaADi10Zqr6TT4B2SRq7uAU4H/B1wBfF7S/cCIiLi8hrjeU/m7fBaYDGwNfJJs3HwPuKCHTz17+foKWQ9iR0kbVrpkvgnM2dO4p0e/6u8ZqCTNVFozqwDXSFoLmK284QBWBW5r0bFVEskOwOVkgnk2Iu6XNBw4ADi7FcduMr6FIuIkSZOBg4GXgIvb0fpr/G0kLQQsRSabC4E/AutK2j8ibm1xDDOVD8j5gVHAy2TyOwP4maT9ImJSK2PowuvA4sBOwLER8RLwS7KxsBCZoOrW+IDcEPhdRNxVum9+BgwF/gOZqCPinel43iERcZGkBYA1ynG2B7Ys75kR5e/Rck7AfaCSTP5bvo4CxpV/5ueBOyPi1RYdu/EivQVYCPgh8Puy7XPA3SUBTO+LtEcqSW894KvAQ5LWAa4muyP+Iulk4MCIeL2VsVT+NvsDHyBbeX8nW+SrAj+VdGhEXN/CGN4tSeNc8n+0DnA7mTzWJV8ne0fEla2KoQtHAIcDY4CVJS1Y4rojIp5scyydqryvfgN8XdJrEXEJgKQtgLPKfk2/rssH4XhJ15FJ/Q9l+/Lk32Ie4Ka++y2mEY9nwvVOOY3clVyl4+EynOfrZF/fq2T/0m8iYmKL45gNOBTYg0x2t5Jv8CMi4upKK72lKgn4q2Qr6nTy7zAKmAjMSr75/x4Rf29hHI2W5wbAnsBuEfGmpA9FxN3l77UDsCWwa0S83KI43muFNxKbpJHAUyWeT5Ef0rtGxButiKGb2D4JrERegGu0BF8FJkTE39oZSyexbQa8Dfw3Ip6UtA/ZoFiE7Np7JSJ27eFzfwjYFNgKmBe4EvhDRNzY3c+1ghNwL5Ur/IcCSwN3k1eULyE/SYdExOQWHrvR/dAYUjQcGEYm/zWBYyLi/lYdv5u4ZgMuiIiNOmyfudT1OAZ4LiK+28IYGgn4J8BVEXFhJ3EMB86NiLVbFEMj+a5Efhi+BvwlIl6o7PMR8kNyy1bEMI34ZiK7zW4mXzerkC30axotzTqUvt8fkR/gLwL/A64FniDP8maLiP+VfXvVsCjXZrYjf+/5ge9FxJ979xtMx/GdgPuGpK+RramZyYtglwKXRMSlrW59SjoKWLTcHUq2xtteLa6S9FYi+3t/A1zfsatB0mrAXRHxYovjmZnsa51MvrEe7/D4nMB8EfFoC47dSL6Lkxe3TiXH236Y7Kb6S0T8RdJ8ZEJpy2l/5X+0KnnmtjjZUNi8EnNbzpa6iXEI+TpeGRhNnj3NDDxJdg/cFxF39uL55wd+AvwiIu4o22YiV9m5JyJacr2mM+4D7oXKC3Z5cr26HciLLKPIfuDtJW3Y+LRu0bFHA2sD+5Rjf5hcM++hiLilr4/bncqbdgOyZvN+wCKS7gEeaSSZiBjfppBGkK2ntYEjJD1ADgW7NiJeiYhXgFdaHMO6wN8i4nsAkhYlT6V3IZPw8y0+fkeNoXdjgeuBZ4G5y7btSj9rT0cX9JUvA78j/3f/JkckjCE/wLYhk3CPEnAZqTQzeU3gMkkvk2etv66j28Ut4D4gaQ/gExHxucq2zwBLRsSxLTrmkDL0bS9g9og4uvLY4cBiEfH5Vhy7yfjmAz4DfIIcZ/occGREPFNDLB8APkZ+OH0Y+EdEnFztwmnhsb9Ldkf9BHg6ykSHyuNtuTjaSVz/ioiPSfo78P2IuE7S2WTf/MntjqcS1yzka2YccBzZL309cGVEPKgcwz1TREzqi/+fpE3IC9ejgS9HxK969xtMH7eA+8YZ5CD/Y4GfR8RD5OnMA606YOVNuw3wMUlzkX2+L5Ev2hshX9AR8Var4miofCAsQ/anrQl8h7wINwZYrR3Jt3JmMDuZbLcExkXE2eQg/hXJLomWU04UGE12D80NXCTpJvIC3GswfVfw+9hpks4ERpbkuyB5HePMmuIBoLxWLy0jR/5CDh/8KPBxSc8BV0fEeWXfppNv5XUxF7A88FBEPBURF0u6mrwwfHFf/z7TjMst4J6RtDI5rOoWMuEtDnwJ2Jg8rb0J+E7HfscWxPEBMtlvQb5Qh5AXVXZudR9rF/H8m+x+ORrYLyLOk7QsORyu5S+2ygfBt8jENw/ZJfISOevrxGjx2N8SR/UC6Txkf+unyAs9f42IY1odwzTiGw58i+yeeQt4GHggIr5Vc1zVv9ucEfFK6atfmezOeSIiTuxp61fS9uSY3/HkSKEHgSWAfSPi0330azQfjxNwzyhXav432dJbA7iMHGb1NLBIRDzchhjed7FE0lLAtpSxncDpEXFoG+JotC5WIScZbEH+bdYoF3wuAvaMiLat4yfpP+TV7SOBP5FX+Y8gx37+qE3dD9uRY48VEQeUbauTF73+U8fFrnKxaS6y8TAnMAc5suDxiLi7nbF0ElvjdTSMnAo9kuyzvgQ4PyKebZzR9SIBz0m+Z9cBliGHui0KXFjHh6K7IHooIs4CkILNEmEAABlcSURBVPQSOavo0+SFuIeAuyU9Uy7ytEQZ6vUVSTuTFyvOIWeY/aRc/R9DjrltucobYR7yNG4H8lTxXeWswPnbnHyXIIcEPg6sCPw7Il4sya+ly9BURhlsQrZ6zwW+WB77MPBi46JsO5NvJWF9DtiXvPg2Hrif7K56rl2xdKXyOvoi2XXzHfKC9vrAFyXdEBH7d9h3miqJfQjwJtna/z4wW3n+e4C2jsF+Lza3gKdf5TT3Q8Az5Iv3w+Q4yuXIwd37t6LvtXLsvckuh4vIixWPAyuQQ2sO6evjTkd8p5CJ5xfAb8mLT/+MiF+1+oKTpGER8Wy5vTA5qeC7wB1kY+OLEbFyq45fjtt4s/8F+BV5JrJYRHxD0m7AmIj4Uitj6CKuxgfDhWQX0bPAx8lW4HByIsKF3T1HG2I8EPgzWfPhxoi4pvQFDyUT5dCI+Nf0njlU3jOHkXU4lgFeACaQk5ZuAd5qRxfZVCLCX9P5RV6Fhbz4tnOHx2YDFm3hsRsfmpeSCf9HwPZl22nAYdUYa/r7rE1ezPkXWXxmjjYccyjZx3s8sDn5ZgVYi2yV/wL4TNk2pA3xHEDWMLgSGFa2/Q34bLv/P+QH81VkF8z5wCyVx+YENgMWruv1UuIYBpxHnrn8r7y3FurD5x9CJtpRZF2WL5MjLa4D1qnr93YXRA9EtiQWBFaOiB0BJM0aEW+Sha3/0MJjR+l++Dv5Yl2SfMFC9uud26pjd6bSJ7ctOa11NfIF/s2IeLCNoQT5YTQa2JmseHYbcFpEbPK+Hdsz8uBcsltoCXJc9ptkn+YZJYZ29v3OARwDfIQcG32zpF+TXVYPkgWK6vZuRGxRus+2JcdJXytpPPBX4LzoMIRvOn2KrL/xDPBqRBwr6cGy/brehd5z7oLoIUkrkC2K3aLUEShjFM+JiD6vxdvVRQflfP69yav8q0TER/v62E3ENgd5AfLHZEGXT5KJ+ICIuLeGeOYhL4yuS3YNzQGcHBFntPi4je6HDcnKdEPJC5IbkUPfGhW92nbxrXxYX0W2xmcGFiYvQq1K1vt9Gzg0Im5vRzxdxDgnefZ2AXBq43WunLSyDXk28YOIOLEXxxhNXhOZCfhCROyprH28WVTG77ebE3APlb6pY8g+pT+Rs9A2JE83x7bomOuS3Q7vAn+OiMllvOua5CnWfZGD1dtV+WxbshX+LrBjRByiKXUWvgEsFxF7tDqOSjyzUsYex5QppouQw9DuiIgbW5X8Ksl3MeAUsi70C9P4sZaT9DkyyexU2TYrORzug+RogFOi9J3XQdJYciLTTuX+zDFlZY5FI+LRSj/udI9+KBffZomI18s44D8B65F9wD+OiEv79BeaDi7IPh0krSlpI4CIeDMi9iY78dchL/a8DBzWomNvRY6tXbJ8bVEeWoZsXc1KrnDQrlNsyC6Ha8haB1tKWqdymvgs+aHQGPrUMpXnH02OwDhbuYTNV4B3IuK9SlctbHk2pvjuDNwaES9oytJDH1HOlqzDrsCTkpYqFyYbr90nI+IGcgpubcm32IXsu29cMHu78j/9P0mbNV7T05N8NaWg+w5klUAi4uWI2IK8WL5nnckXPAxtes0ETC5vpt3JK/ynkf1XLSlnWLEj8JWIuFJZ7OZnZZzpLOSp5D8ioq0zeSJHWxwi6WPk0KFxkh4iL3ZMIscEt9NY8n9yO9nCOwj4gqQryRmK97XqwB0S+5By6t/YtgPwDnTdldQKytKoHyb/F98CHij94vcAkyLixWhzCcxOYpwduI/8f5VN7/vAXpUcKjfdf7tKQ+Rr5OtgFrLbcCvg6Ig4rrfx95a7IHqgDBTfk7zavgA5CeP8yMpnff4GK8d7GlgpyiwuSRPJgiUXRsR9mjJrqF11f4eQHzzRYfsWwIHkFeylWx1H5bgLA9dFxBKV+FYjhzTNThbFb+kbrhxzLuDXZB/wLWRLa39g94i4vc0J+FBg3oj4WjlzW4c8e3qJTMK3RcS4dsTSHWXt3z2AnaofCOWC3K3k6/7NHj73B8kLnx8j63QvRa788T2yBdz22iRVTsBNqvTxve8NpKx98H/k0i5rRcRTLTj2EHL65IHkhZ3LgNUjYkxfH2t6Yip9cgeT/dLPk2/s4yLiHklDI+K1NvZHz04usHh3RPyybFuKTIZfJctBrtPTN/I0jt0YY3s4OQLkCXKyQ6MI0fURcVpfH7eJuPYni9jcUtm2ADn+dxOyX/zorn6+HSStEhE3KWtE70oOJfwdOXpkQ3J5rX17+jpSFoU6lBxqN5Hs7lgaOCkiWrZOY7OcgJtUSTj7kS/eB8hO/OuiBeUmu4ljONnPeAjZwjo7Io5rZ8uqEssKZGL7LllPYDmypXFwRNzb5tbe5mQX0TfIhRbvLDFdWW5/KSK2anEM5wKf6zAq5pm6TvNVKcRUTuujQ+NhaJSiQDXFtxDZ93sL+eH5AXJEz6fJRsYlZHH453t6Zlc+mOclz1SfjoinJJ1IFuP5Xh/9Kj3mBDwdSkv0VnLV1GXJhDMLefHt59Heca8oZ+J9l6wre14bj3sw2bJbEHih0uIcQk54eC0iDmxjPCsAP4lSTEVT6jNfQfYHf5t8I/f56XblzOhD5KiYB8hC9He0oyuoJ9rVTdWM8iG1FzkR47gow+F68+FQOSP5GLB5RHyjbB9VdlkSuCHaX4t5Kr4IN30WJ6fVXghcWFoVHyNP6fp8VYVpiSyesnM7j1l+50fJoW+LkQs6vkUOi3tR0otkf/V7Zw0tjKXx/KOAGyXNERGvRq6WcGdjH3JsaUuWZqq0KIeTLbnFgd2AScoC8P+uvZ+xQ8LtL8kXILJGyKGStiYX3pxAjtl+tRdnUI0RKXuSY6BRVsdbAxgfEd/vi9j7glvATah8oq5JXkV9FfhRRNQ2g6ZO5WryfGQ/3cbkULilyVO9h2hzKUxJV5FFd84gr27f065jdxLLCPJi12iypXVktHhB1oGocuawMHnB9hblOPfdySGMv48ylruHzz+E7CLcm/x/LE1OSf8i8MOI+Hevf4k+4ATcJGXd3YnkON/lyRbgW+Q0xu/U2ZdWF0lDyULji5DDiLYjL4Id3e4+aWV95n3I1RQeI2vu/rLFx2xcF/gI+QGwFvl6uDwinpA0qo4Pg0pcq5H/k+XJhT9vaHcs01JGZ2wOfD3K2oEqRYuAP0bE9b147j3K86xEdkVMVhbEX7u/vF89EWMaKmMSVydPZY+PLIm3Pjn1drb+8s9sF0mzKStLTSTH+q5LnvLvC/y+TTGofN9FuSzTyxHxBbI74jiyS+C9/VqkcSr/Y/IC0kfJK/l/VVZDm7urH2ylSrfPSWSBm9XI6dhI2qR8cPYXd5AFrK6TtEPZ9lfy9TQapv9/qKzTAnA2eSFv05J8v072zfeb96tbwE2S9AOy1XssuUbVU/2pL60dKi2rfcmpnHuTH0xblu8bR8QTbYxHwFeAD5GNicfI2rbjG3G0uiWuXPX47IhYTdIt5HCnz5OvlW/UMPa3cWq/JvC1iNhO0vURsUYZEXADsFE7/0/NkLQ+Wbz+gujhYrLKBQFOJlejWZNcFOAFsgviv+Rr9NsRcVGfBN0H3AJugnJK6WPAXeSMtC8BW0taRS2eZtufVFpWK5ATQJ6OiIsia19cTo7bbGc8ERFHkaNSziILwh9Hjpd+b58Wh7EU8LvSDfF0REwi+6Ifb1zRb2dXTOVYMwPjJf2c/N9AJqWn+kvyLa3xr5a+39HkxctLJR1Q3nPTayZyVNJjZAPhRHJ8+mzkcMRD+1PyBY+CaEpEvCnp+NL6W5Qcp7g9cE9E3FRzeG1VWp2XAftKeoqcYfYAeZp7cdmnpcOcKq28rcjC3Q+T9ZEvlfQCOSGkXcOtJpBD3d4BHlIWyl8LeLGNMVCONSs5O/HtyGLma5OlHU9WFrzZjmwh1qY0WGYiu29Gk2cvo8nW6hll+0rkWdWZ03n2cCN5RnQUeWFvT0n7kJMuTu+PjSV3QTSh9B2tSp7CjCPXGXuKLLxe2xX3dunsTVD6XUeTdXiXJQe2f76NMc1NznIbRrZ4xpEFzy8GDi8JqGWn/p0lVmV1uN3JWs1nRsQzbU7AW5ATUf5JnsrfKGkNcprvM+SH1NWtHBrYRIw7k6uEnE0usPlgJ/usBfyRnO053UP4yiidb5HF5ncGliqNqLZPVpoWJ+AuVIaerQf8EPgC2bLan7zivX30g3KD7aIppTCDvBj5nKRVySpsk4FHIuKNdiQcTSkCP4wcArcOuQrHR8hxt7u38viVOESeRb7deGOXYWhrR1kzsJ0kjWRKQ2FFcnXuC8jC6883Yq4zCUkaQ47PHUWOF/8P+YHxMFko/e3yf/1JROzZg+dvvG+XIbuiNiUneoxrjLLoT5yAu1C54HQUOdvr8MpjRwIvRUS7q33VopzqH0ouMfQueSX5BOXMoqHkMLTLogVr4HUSyz5kF9DdUVYarjw2L9kN+mKrPgjKMX5Cjje+s7J99sh6s+eQ9ReOrSPZlQ8FkbM0VyI/nEaShde/FBFtnzBUiW0+4PXyd5qdXI1iS3K89N3kEL7T+3KUgrI4/gHkUNF+113oPuAuVE7TzgU+L2nxmLLU/OLk6dxg0VkpzG3J10+jFOY/Wh1EGaa0M1nV6nMlGe9DDmX6TURc2di3ha3wV4BrgT8rV3I4BTghIp4uj69CtrjaSlOKmG9LNg7+Ieku8nW6BDC6zuRbbA3cLull8kN7XEScpxxjvw3w8Yg4qY8/uP5JLlj7SB89X59yC7gTpd9sVuA/5ZToR2St2TvJ4SzLk6sM9LtTmr6mflQKU9IfyRbShZLOIMe2HkQm5Y2A7SLioVYdv5N4FiQr4X2DrBHyNDA8Ij7Zzr7fEkvjwuQ1wPerH4gqU7TbFUtXymvpOfIDdG2y22EiOazztsbfq+5uknZyAu6EciWFlcgXy9XkYO7XyWm375CFXVpdgL1fUD8phVn5IBgdERMlXQrsFaXGg6SzyPG4p7czrkp8HyL/RpdGxF/UpjKcHWJYCjgrIlYp9xt95ZeQ66A93P0ztE/pK/8EWUdlLvK99u1o4xT2/sAJuBPKIs4jydPJseTwlknk6czdkQVEBh3VWAqzwwfBCHK850IxpdzieGCTSlfAoFNGhvwG+FtEnFO2rQocGxFr1xxb45rKcsCiZC2RGyLikfLhNSYi/lxnjHVwAu6GpD3JvqnDyVOmUeRFhAO6/cFBQDWVwizHHkYW1j6Y7P+dBMwREdu2+9S/bmVs68hG61bSjmS/+DNkUZuhwM0R8dP6opxC0h3AeDK+ecmzmpuAc6Pm5ZHq4ATcDUkXAL+KiEvKFdylyIHu/605NCvKB8FB5IXAM+s49a9TGR64IHl2tho5oWEEOcFhbXKG4O0xZbHU2kj6KDk9e5cyTGwpcgz58sCBEfFSrQHWwAm4QtI65CD675ED+38dER+vNyqzrimXGHob+CQ54eJ28sLWreTySO/UfUGrcoFwRbJOxi8i4pHy2FzAgp1NyBgMnIA7KENidiX7GucgV7S9eDC1qmxgKq3Kj5NToWclC9H8vJ0jQ7qinCZ9Etkqf5Ocdnx6tHE5r/6o382NrltEPBURP4uI4eRIiM2AxyVdVS7OmfULpf8XSfNKWowsRnROZFnOnwEPktO0a6Mp9Re2Iht8S5JlS5cGLpF0WZk8Mii5BdyEcgV+HWBiRDxbdzxm8L5pt38iRxbcR06Xf4gsEvSfuvt+K90PPyS7Q75TeWwIuZL4NYOt777BM+GaUF4YV9Udh1lDh8kVi5GrSowiL2gtSdYumQzUeopfku9QsiTkpmUo4/XAtRFxF9AomjToki+4BWw2IEn6BnlB6yqAiNir8thw4EPRX9Y9yy6GD5Ct9Mb6bPMDdw2WeipdcQI2G4DK6IH1y9cu5LTeX5NlMPvVbLJyAe7jwK0R8VQpaLQeuYzUZYNt7HaVE7DZAKdcWXgDshDPkuTElLauTN1JTI3+6Y+QMydfJYfK3Qv8Fji/P9SnqJv7gM0GmEpyW4qczLAgcFVE/KlM9V2nH7SCGyMb9gCuIGuovEGOUz6+bG/rElb9kROw2QBTOV0/hhzxsDWwCdnyfT4i2rIy9TQ0Tq1XAr4DnEqWDP1nabH/HabUiKgpxtp5HLDZAFKGbjVWEX47IvYDnoyIW8qsuN9KmqfWIMkPiVJ0/UAyGT8GLCRpEXJM8N1lv0GbfMEJ2GxAqSSshYBrlesVXlG2rQXMVnf3g6RzJC0XEa9HxPWldOvZ5FJEPyTLuT6jfrhIZrsN+j+A2UBRZrytX+6OIxck3Re4RdLqZL/q2XXFB+/VJF6qMcVY0sHK5ZquIBcs/RGwd50x9ifuAzYbOEYDX5D0UFmJ5GRgdrIK2vbAP6h52XlyhZCzACRtThbvf7309T5Y3XGwDj2rcgI2GzjuJOs7XC3pV+TioF8nJzY8En24mGUvbAm8KelaMhk3LgiGcrn491aQNo8DNhtwlAuj7k0WWj++7niqJC1Ors+3JTlJ5BzgxNIFYR04AZsNMOXi1TrA94G3gC9HxO31RvV+Zfrx8uSIhw3Jscp/jYjDaw2sn3ECNhsAJK1A1lK4h6ynOxfwPPA1MtHtHfUvOw9MvaqxpNnID4w5I+L8wT72t8oJ2KyfKwtrHgPcT07nvYGc2vsJsgbEKGB9L5U18DgBmw0AkuYE3oiIt8t048llLO0o4MWIeLLmEAGQtCbwQMd42rFy9kDkBGxmvVL6pJchC+1cAGxThp7NXHdB+P7OEzHMrLeGkUt33QgsR1Zko5F8Je1VhqBZB24Bm1mvlPoUcwN/LJteJBcFvQoYCqwWEdu5G2JqTsBm1ickzUeeVQ8DViVn6H0EOCYiLvLoh6k5AZtZjzWSqqQvAMtFxNfKChgLAjNFxKSaQ+zX3AdsZr3RqOewFVmLAuA3wLnANvC+pemtA/9hzKzHyqrH85Mt3omSjgUeIWtUbFPKUg76ojtdcTEeM+utF4C/kYV3nieT71BgnkZZSuuc+4DNrNfKSIilgIci4k1JPwXejIhv++Jb15yAzWy6VRYGXZicEr0acAcwLiIekrQiuVTSZA8/65oTsJlNt0oCPgEYAVxILsC5DPAc8KuIuKrOGAcC9wGb2XSrXFgLYK+IeLQsBroYsClZrc01IKbBCdjMekTS2sCyZL3fU8pioLdLuqsxDdnJt3sehmZm06VUZgN4DXgFOKSshLydpKEuwNM8J2Aza5qkDwBblLsPRMRmwCrAP8kVmp+QtFpd8Q00vghnZk2TtCywAPAS8B3gX2SB+AllSvJSZGJ2YmmCE7CZTTdJw4FPAx8FFgYeJ+sBnxsRj9UZ20DiBGxmPdIY4SBpMXKppI2Bwzz7rXlOwGbWlErls82AtYH5gMeA64BrI+LVWgMcgHwRzsyaUplO/B1gPLAeufrFgcCfJX28ptAGLCdgM5smSSrfRwPPR8TfgLeA/YG/lt3urCm8AcsJ2MymqTKqYRhwsqQxwF0R8TJwOdmdObm2AAcoz4Qzs6ZFxBXw3mSMBSTdDTwKnF+2u/LZdPBFODPrVqXwzlLABsA1wMPkTLityK6ISyLijRrDHJDcAjazZu0MfBW4nZz59l/gXxHxFLjwTk84AZtZt0rrdyiwLrAOOfLh/wEnABdLujgi/uLkO/2cgM2sS5VW7UbAGxFxB1l4/UJJlwFfAw6S9G5E/LW757KpeRSEmXWp0qq9BxgiaR9JS5dtSwNXkkV4tqwhvAHPF+HMrCmSNiKXmn+RTL6LALsC+wG3RcQJNYY3IDkBm1mXOl5YK+UoVwFeB24qm88DNo2I12oIcUBzAjazTkk6GHgbWBGYALwLzAPcCqwM/CMiJkiaJSLeqi/Sgct9wGY2FUmrAD8gF9m8GFiCTL6HAbsDc5JjgXHy7TknYDPrzETg88DHgYUi4mvAC8A5EbEtcERj/K/1nBOwmU0lIt6KiFOA7YEVJW1PTsQ4uezyel2xzUicgM1sKioiYiKZdPcgJ1+8Au9blt56wRfhzKwpkr4ArAkcXRKz9ZJbwGbWrFOAW4CFYEqNYOs5t4DNzGriFrCZWU2cgM3MauIEbGZWEydgm6FJWljSGZLuk3SHpIskfaiT/a6tIz4b3HwRzmZY5Sr9tcCpEXF82bYSMHdE/Kvc9xpmVhu3gG1G9gngrUbyBYiI/5J1ba+Q9Gdyyi2SXi7f15N0laQzJd0t6UhJn5V0g6SJjVq4koZLOlvS+PK1dtm+rqT/lq+bJc3d9t/aBgyviGEzshWBG7t4bHVgxYh4oJPHRgPLA88C9wO/j4jVJe0PfAk4ADgG+EVEXCNpceCS8jNfB/aNiH9LmgtP2bVuOAHbYHVDF8kXYHxEPA4g6T7g0rJ9ItmqBvgksEJlLsI8pbX7b+AoSX8iC9dMakn0NkNwF4TNyG4HVu3isVe6+bnq8urvVu6/y5RGy0zAWhGxUvlaNCJeiogjgT2BocB1kpbrefg2o3MCthnZ5cBspYYBAJJWI1f37a1LyaV4Gs+7Uvm+dERMjIgfk0XMnYCtS07ANsMqS+lsBWxYhqHdDnwXeKwPnv7LwBhJt0q6A9irbD9A0m2SbgFeI4uZm3XKw9DMzGriFrCZWU2cgM3MauIEbGZWEydgM7OaOAGbmdXECdjMrCZOwGZmNfn//DKJkjVZVAYAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "number_of_crimes = [22, 17, 449, 208, 313, 697, 36, 1395]\n",
    "x_axis = np.arange(len(number_of_crimes))\n",
    "\n",
    "plt.figure(figsize = (5,5))\n",
    "plt.bar(x_axis, number_of_crimes, color=['purple', 'magenta', 'lightgreen', 'lightblue', 'cyan', 'orange', 'yellow', 'coral'], align=\"center\")\n",
    "\n",
    "tick_locations = [value for value in x_axis]\n",
    "plt.xticks(tick_locations, crimes)\n",
    "\n",
    "degrees = 70\n",
    "plt.xticks(rotation=degrees)\n",
    "\n",
    "plt.title(\"2019 Crime\")\n",
    "plt.xlabel(\"Crimes\")\n",
    "plt.ylabel(\"Number of Each Crime\")\n",
    "\n",
    "plt.tight_layout()\n",
    "\n",
    "plt.savefig(\"Bar2019.png\")\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Arrest Date</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex Code</th>\n",
       "      <th>Charge Group Description</th>\n",
       "      <th>Charge Description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>63157</td>\n",
       "      <td>2020-02-06</td>\n",
       "      <td>22</td>\n",
       "      <td>F</td>\n",
       "      <td>Fraud/Embezzlement</td>\n",
       "      <td>POSS ID OF 10 OR MORE PRSN W/INTENT DEFRAU</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>65878</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>16</td>\n",
       "      <td>M</td>\n",
       "      <td>Larceny</td>\n",
       "      <td>GRAND THEFT PERSON</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>65880</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>69</td>\n",
       "      <td>M</td>\n",
       "      <td>Assault</td>\n",
       "      <td>TERRORIZE CAUSING FEAR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>65881</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>20</td>\n",
       "      <td>F</td>\n",
       "      <td>Larceny</td>\n",
       "      <td>THEFT FROM VEHICLE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>66021</td>\n",
       "      <td>2020-01-03</td>\n",
       "      <td>28</td>\n",
       "      <td>M</td>\n",
       "      <td>Narcotic Drug Laws</td>\n",
       "      <td>POSSESS CONTROLLED SUBSTANCE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>88604</td>\n",
       "      <td>2020-04-03</td>\n",
       "      <td>34</td>\n",
       "      <td>M</td>\n",
       "      <td>Vehicle Theft</td>\n",
       "      <td>TAKE VEHICLE W/O OWNER'S CONSENT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>88605</td>\n",
       "      <td>2020-04-02</td>\n",
       "      <td>21</td>\n",
       "      <td>M</td>\n",
       "      <td>Assault</td>\n",
       "      <td>TERRORIZE CAUSING FEAR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>88606</td>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>41</td>\n",
       "      <td>M</td>\n",
       "      <td>Vehicle Theft</td>\n",
       "      <td>TAKE VEHICLE W/O OWNER'S CONSENT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>88612</td>\n",
       "      <td>2020-02-20</td>\n",
       "      <td>23</td>\n",
       "      <td>M</td>\n",
       "      <td>Liquor Laws</td>\n",
       "      <td>DRINKING ALCOHOL*******</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>88613</td>\n",
       "      <td>2020-04-08</td>\n",
       "      <td>46</td>\n",
       "      <td>M</td>\n",
       "      <td>Miscellaneous Other Violations</td>\n",
       "      <td>DAMAGE PROPERTY</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8922 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Arrest Date  Age Sex Code        Charge Group Description  \\\n",
       "63157  2020-02-06   22        F              Fraud/Embezzlement   \n",
       "65878  2020-01-01   16        M                         Larceny   \n",
       "65880  2020-01-01   69        M                         Assault   \n",
       "65881  2020-01-01   20        F                         Larceny   \n",
       "66021  2020-01-03   28        M              Narcotic Drug Laws   \n",
       "...           ...  ...      ...                             ...   \n",
       "88604  2020-04-03   34        M                   Vehicle Theft   \n",
       "88605  2020-04-02   21        M                         Assault   \n",
       "88606  2020-04-01   41        M                   Vehicle Theft   \n",
       "88612  2020-02-20   23        M                     Liquor Laws   \n",
       "88613  2020-04-08   46        M  Miscellaneous Other Violations   \n",
       "\n",
       "                               Charge Description  \n",
       "63157  POSS ID OF 10 OR MORE PRSN W/INTENT DEFRAU  \n",
       "65878                          GRAND THEFT PERSON  \n",
       "65880                      TERRORIZE CAUSING FEAR  \n",
       "65881                          THEFT FROM VEHICLE  \n",
       "66021                POSSESS CONTROLLED SUBSTANCE  \n",
       "...                                           ...  \n",
       "88604            TAKE VEHICLE W/O OWNER'S CONSENT  \n",
       "88605                      TERRORIZE CAUSING FEAR  \n",
       "88606            TAKE VEHICLE W/O OWNER'S CONSENT  \n",
       "88612                     DRINKING ALCOHOL*******  \n",
       "88613                             DAMAGE PROPERTY  \n",
       "\n",
       "[8922 rows x 5 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 2020 Bar Graph\n",
    "postcovid = postcovid.replace(\n",
    "    {\n",
    "        \"Aggravated Assault\": \"Assault\",\n",
    "        \"Other Assaults\": \"Assault\"\n",
    "    })\n",
    "postcovid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "number_of_crimes_2 = [14, 12, 290, 143, 206, 468, 33, 982]\n",
    "x_axis = np.arange(len(number_of_crimes_2))\n",
    "\n",
    "\n",
    "plt.figure(figsize = (5,5))\n",
    "plt.bar(x_axis, number_of_crimes_2, color=['purple', 'magenta', 'lightgreen', 'lightblue', 'cyan', 'orange', 'yellow', 'coral'], align=\"center\")\n",
    "\n",
    "tick_locations_2 = [value for value in x_axis]\n",
    "plt.xticks(tick_locations_2, crimes)\n",
    "\n",
    "degrees = 70\n",
    "plt.xticks(rotation=degrees)\n",
    "\n",
    "plt.title(\"2020 Crime\")\n",
    "plt.xlabel(\"Crimes\")\n",
    "plt.ylabel(\"Number of Each Crime\")\n",
    "\n",
    "plt.tight_layout()\n",
    "\n",
    "plt.savefig(\"Bar2020.png\")\n",
    "\n",
    "plt.show()\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "M    10898\n",
       "F     2355\n",
       "Name: Sex Code, dtype: int64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Count Gender (2019)\n",
    "precovid['Sex Code'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 2019 Pie Graph (Gender)\n",
    "labels = [\"Male\", \"Female\"]\n",
    "\n",
    "sizes = [10898, 2355]\n",
    "\n",
    "colors = [\"lightskyblue\", \"yellowgreen\"]\n",
    "\n",
    "explode = (0, 0.1)\n",
    "\n",
    "plt.figure(figsize = (5,5))\n",
    "plt.pie(sizes, labels=labels, colors=colors, explode=explode,\n",
    "        autopct=\"%1.1f%%\", shadow=True, startangle=140)\n",
    "\n",
    "plt.title(\"2019 Crime v Gender\")\n",
    "plt.legend(labels, loc= \"upper right\")\n",
    "plt.tight_layout()\n",
    "\n",
    "plt.savefig(\"Pie2019.png\")\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "M    7245\n",
       "F    1677\n",
       "Name: Sex Code, dtype: int64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Count Gender (2020)\n",
    "postcovid['Sex Code'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "1677# 2020 Pie Graph (Gender)\n",
    "labels = [\"Male\", \"Female\"]\n",
    "\n",
    "sizes = [7245, 2355]\n",
    "\n",
    "colors = [\"orange\", \"lightcoral\"]\n",
    "\n",
    "explode = (0, 0.1)\n",
    "\n",
    "plt.figure(figsize = (5,5))\n",
    "plt.pie(sizes, labels=labels, colors=colors, explode=explode,\n",
    "        autopct=\"%1.1f%%\", shadow=True, startangle=140)\n",
    "\n",
    "plt.title(\"2020 Crime v Gender\")\n",
    "plt.legend(labels, loc= \"upper right\")\n",
    "plt.tight_layout()\n",
    "\n",
    "plt.savefig(\"Pie2020.png\")\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Jurisdiction</th>\n",
       "      <th>Range</th>\n",
       "      <th>Cases Reported</th>\n",
       "      <th>Community Transmission�</th>\n",
       "      <th>URL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>1001 to 5000</td>\n",
       "      <td>4241.0</td>\n",
       "      <td>Yes, defined area(s)</td>\n",
       "      <td>http://www.adph.org/</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Alaska</td>\n",
       "      <td>101 to 1000</td>\n",
       "      <td>293.0</td>\n",
       "      <td>Yes, defined area(s)</td>\n",
       "      <td>http://dhss.alaska.gov/Pages/default.aspx</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>American Samoa</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>http://dhss.as/</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Arizona</td>\n",
       "      <td>1001 to 5000</td>\n",
       "      <td>3962.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.azdhs.gov/</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Arkansas</td>\n",
       "      <td>1001 to 5000</td>\n",
       "      <td>1583.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>https://www.healthy.arkansas.gov/</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Jurisdiction         Range  Cases Reported Community Transmission�  \\\n",
       "0         Alabama  1001 to 5000          4241.0    Yes, defined area(s)   \n",
       "1          Alaska   101 to 1000           293.0    Yes, defined area(s)   \n",
       "2  American Samoa          None             0.0                     NaN   \n",
       "3         Arizona  1001 to 5000          3962.0         Yes, widespread   \n",
       "4        Arkansas  1001 to 5000          1583.0         Yes, widespread   \n",
       "\n",
       "                                         URL  \n",
       "0                       http://www.adph.org/  \n",
       "1  http://dhss.alaska.gov/Pages/default.aspx  \n",
       "2                            http://dhss.as/  \n",
       "3                      http://www.azdhs.gov/  \n",
       "4          https://www.healthy.arkansas.gov/  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Heat Map - COVID Outbreak\n",
    "gkey = \"AIzaSyBah0bSOhD_OIPCYniplzIQKKLQ0RwfeXc\"\n",
    "\n",
    "covid = \"States_Reporting Cases_of_COVID-19_to_CDC_(2).csv\"\n",
    "covid_df = pd.read_csv(covid)\n",
    "covid_df.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Jurisdiction</th>\n",
       "      <th>Range</th>\n",
       "      <th>Cases Reported</th>\n",
       "      <th>Community Transmission�</th>\n",
       "      <th>URL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>California</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>24424.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>https://www.cdph.ca.gov/</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>Florida</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>21865.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.floridahealth.gov/</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>Illinois</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>24593.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.idph.state.il.us/</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20</td>\n",
       "      <td>Louisiana</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>21951.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://dhh.louisiana.gov/</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>24</td>\n",
       "      <td>Massachusetts</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>29918.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>https://www.mass.gov/orgs/department-of-public...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25</td>\n",
       "      <td>Michigan</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>28059.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.michigan.gov/mdch</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>34</td>\n",
       "      <td>New Jersey</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>71030.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.state.nj.us/health/</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>36</td>\n",
       "      <td>New York</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>211550.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>https://www.health.ny.gov/</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>44</td>\n",
       "      <td>Pennsylvania</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>26490.0</td>\n",
       "      <td>Yes, defined area(s)</td>\n",
       "      <td>https://www.health.pa.gov/Pages/default.aspx</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>Texas</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>15492.0</td>\n",
       "      <td>Yes, defined area(s)</td>\n",
       "      <td>https://www.dshs.state.tx.us/</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Jurisdiction           Range  Cases Reported Community Transmission�  \\\n",
       "5      California  10,001 or more         24424.0         Yes, widespread   \n",
       "10        Florida  10,001 or more         21865.0         Yes, widespread   \n",
       "15       Illinois  10,001 or more         24593.0         Yes, widespread   \n",
       "20      Louisiana  10,001 or more         21951.0         Yes, widespread   \n",
       "24  Massachusetts  10,001 or more         29918.0         Yes, widespread   \n",
       "25       Michigan  10,001 or more         28059.0         Yes, widespread   \n",
       "34     New Jersey  10,001 or more         71030.0         Yes, widespread   \n",
       "36       New York  10,001 or more        211550.0         Yes, widespread   \n",
       "44   Pennsylvania  10,001 or more         26490.0    Yes, defined area(s)   \n",
       "50          Texas  10,001 or more         15492.0    Yes, defined area(s)   \n",
       "\n",
       "                                                  URL  \n",
       "5                            https://www.cdph.ca.gov/  \n",
       "10                      http://www.floridahealth.gov/  \n",
       "15                       http://www.idph.state.il.us/  \n",
       "20                          http://dhh.louisiana.gov/  \n",
       "24  https://www.mass.gov/orgs/department-of-public...  \n",
       "25                       http://www.michigan.gov/mdch  \n",
       "34                     http://www.state.nj.us/health/  \n",
       "36                         https://www.health.ny.gov/  \n",
       "44       https://www.health.pa.gov/Pages/default.aspx  \n",
       "50                      https://www.dshs.state.tx.us/  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_10 = covid_df.loc[(covid_df[\"Jurisdiction\"] == \"California\")\n",
    "                      |\n",
    "                      (covid_df[\"Jurisdiction\"] == \"Florida\")\n",
    "                      |\n",
    "                      (covid_df[\"Jurisdiction\"] == \"Illinois\")\n",
    "                      |\n",
    "                      (covid_df[\"Jurisdiction\"] == \"Louisiana\")\n",
    "                      |\n",
    "                      (covid_df[\"Jurisdiction\"] == \"Massachusetts\")\n",
    "                      |\n",
    "                      (covid_df[\"Jurisdiction\"] == \"Michigan\")\n",
    "                      |\n",
    "                      (covid_df[\"Jurisdiction\"] == \"New Jersey\")\n",
    "                      |\n",
    "                      (covid_df[\"Jurisdiction\"] == \"New York\")\n",
    "                      |\n",
    "                      (covid_df[\"Jurisdiction\"] == \"Pennsylvania\")\n",
    "                      |\n",
    "                      (covid_df[\"Jurisdiction\"] == \"Texas\")]\n",
    "top_10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:4: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  after removing the cwd from sys.path.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Jurisdiction</th>\n",
       "      <th>Range</th>\n",
       "      <th>Cases Reported</th>\n",
       "      <th>Community Transmission�</th>\n",
       "      <th>URL</th>\n",
       "      <th>Lat</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>California</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>24424.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>https://www.cdph.ca.gov/</td>\n",
       "      <td>36.778259</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>Florida</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>21865.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.floridahealth.gov/</td>\n",
       "      <td>27.994402</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>Illinois</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>24593.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.idph.state.il.us/</td>\n",
       "      <td>40.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20</td>\n",
       "      <td>Louisiana</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>21951.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://dhh.louisiana.gov/</td>\n",
       "      <td>30.391830</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>24</td>\n",
       "      <td>Massachusetts</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>29918.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>https://www.mass.gov/orgs/department-of-public...</td>\n",
       "      <td>42.407211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25</td>\n",
       "      <td>Michigan</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>28059.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.michigan.gov/mdch</td>\n",
       "      <td>44.182205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>34</td>\n",
       "      <td>New Jersey</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>71030.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.state.nj.us/health/</td>\n",
       "      <td>39.833851</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>36</td>\n",
       "      <td>New York</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>211550.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>https://www.health.ny.gov/</td>\n",
       "      <td>43.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>44</td>\n",
       "      <td>Pennsylvania</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>26490.0</td>\n",
       "      <td>Yes, defined area(s)</td>\n",
       "      <td>https://www.health.pa.gov/Pages/default.aspx</td>\n",
       "      <td>41.203323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>Texas</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>15492.0</td>\n",
       "      <td>Yes, defined area(s)</td>\n",
       "      <td>https://www.dshs.state.tx.us/</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Jurisdiction           Range  Cases Reported Community Transmission�  \\\n",
       "5      California  10,001 or more         24424.0         Yes, widespread   \n",
       "10        Florida  10,001 or more         21865.0         Yes, widespread   \n",
       "15       Illinois  10,001 or more         24593.0         Yes, widespread   \n",
       "20      Louisiana  10,001 or more         21951.0         Yes, widespread   \n",
       "24  Massachusetts  10,001 or more         29918.0         Yes, widespread   \n",
       "25       Michigan  10,001 or more         28059.0         Yes, widespread   \n",
       "34     New Jersey  10,001 or more         71030.0         Yes, widespread   \n",
       "36       New York  10,001 or more        211550.0         Yes, widespread   \n",
       "44   Pennsylvania  10,001 or more         26490.0    Yes, defined area(s)   \n",
       "50          Texas  10,001 or more         15492.0    Yes, defined area(s)   \n",
       "\n",
       "                                                  URL        Lat  \n",
       "5                            https://www.cdph.ca.gov/  36.778259  \n",
       "10                      http://www.floridahealth.gov/  27.994402  \n",
       "15                       http://www.idph.state.il.us/  40.000000  \n",
       "20                          http://dhh.louisiana.gov/  30.391830  \n",
       "24  https://www.mass.gov/orgs/department-of-public...  42.407211  \n",
       "25                       http://www.michigan.gov/mdch  44.182205  \n",
       "34                     http://www.state.nj.us/health/  39.833851  \n",
       "36                         https://www.health.ny.gov/  43.000000  \n",
       "44       https://www.health.pa.gov/Pages/default.aspx  41.203323  \n",
       "50                      https://www.dshs.state.tx.us/  31.000000  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lat = ['36.778259', '27.994402', '40.000000', '30.391830', '42.407211', '44.182205', '39.833851', '43.000000', '41.203323', '31.000000']\n",
    "lng = ['-119.417931', '-81.760254', '-89.000000', '-92.329102', '-71.382439', '-84.506836', '-74.871826', '-75.000000', '-77.194527', '-100.000000']\n",
    "\n",
    "top_10['Lat'] = lat\n",
    "top_10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Jurisdiction</th>\n",
       "      <th>Range</th>\n",
       "      <th>Cases Reported</th>\n",
       "      <th>Community Transmission�</th>\n",
       "      <th>URL</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Lng</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>California</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>24424.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>https://www.cdph.ca.gov/</td>\n",
       "      <td>36.778259</td>\n",
       "      <td>-119.417931</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>Florida</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>21865.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.floridahealth.gov/</td>\n",
       "      <td>27.994402</td>\n",
       "      <td>-81.760254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>Illinois</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>24593.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.idph.state.il.us/</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>-89.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20</td>\n",
       "      <td>Louisiana</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>21951.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://dhh.louisiana.gov/</td>\n",
       "      <td>30.391830</td>\n",
       "      <td>-92.329102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>24</td>\n",
       "      <td>Massachusetts</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>29918.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>https://www.mass.gov/orgs/department-of-public...</td>\n",
       "      <td>42.407211</td>\n",
       "      <td>-71.382439</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25</td>\n",
       "      <td>Michigan</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>28059.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.michigan.gov/mdch</td>\n",
       "      <td>44.182205</td>\n",
       "      <td>-84.506836</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>34</td>\n",
       "      <td>New Jersey</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>71030.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.state.nj.us/health/</td>\n",
       "      <td>39.833851</td>\n",
       "      <td>-74.871826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>36</td>\n",
       "      <td>New York</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>211550.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>https://www.health.ny.gov/</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>-75.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>44</td>\n",
       "      <td>Pennsylvania</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>26490.0</td>\n",
       "      <td>Yes, defined area(s)</td>\n",
       "      <td>https://www.health.pa.gov/Pages/default.aspx</td>\n",
       "      <td>41.203323</td>\n",
       "      <td>-77.194527</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>Texas</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>15492.0</td>\n",
       "      <td>Yes, defined area(s)</td>\n",
       "      <td>https://www.dshs.state.tx.us/</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>-100.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Jurisdiction           Range  Cases Reported Community Transmission�  \\\n",
       "5      California  10,001 or more         24424.0         Yes, widespread   \n",
       "10        Florida  10,001 or more         21865.0         Yes, widespread   \n",
       "15       Illinois  10,001 or more         24593.0         Yes, widespread   \n",
       "20      Louisiana  10,001 or more         21951.0         Yes, widespread   \n",
       "24  Massachusetts  10,001 or more         29918.0         Yes, widespread   \n",
       "25       Michigan  10,001 or more         28059.0         Yes, widespread   \n",
       "34     New Jersey  10,001 or more         71030.0         Yes, widespread   \n",
       "36       New York  10,001 or more        211550.0         Yes, widespread   \n",
       "44   Pennsylvania  10,001 or more         26490.0    Yes, defined area(s)   \n",
       "50          Texas  10,001 or more         15492.0    Yes, defined area(s)   \n",
       "\n",
       "                                                  URL        Lat          Lng  \n",
       "5                            https://www.cdph.ca.gov/  36.778259  -119.417931  \n",
       "10                      http://www.floridahealth.gov/  27.994402   -81.760254  \n",
       "15                       http://www.idph.state.il.us/  40.000000   -89.000000  \n",
       "20                          http://dhh.louisiana.gov/  30.391830   -92.329102  \n",
       "24  https://www.mass.gov/orgs/department-of-public...  42.407211   -71.382439  \n",
       "25                       http://www.michigan.gov/mdch  44.182205   -84.506836  \n",
       "34                     http://www.state.nj.us/health/  39.833851   -74.871826  \n",
       "36                         https://www.health.ny.gov/  43.000000   -75.000000  \n",
       "44       https://www.health.pa.gov/Pages/default.aspx  41.203323   -77.194527  \n",
       "50                      https://www.dshs.state.tx.us/  31.000000  -100.000000  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_10['Lng'] = lng\n",
    "top_10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "gmaps.configure(api_key=gkey)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:6: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  \n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Jurisdiction</th>\n",
       "      <th>Range</th>\n",
       "      <th>Cases Reported</th>\n",
       "      <th>Community Transmission�</th>\n",
       "      <th>URL</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Lng</th>\n",
       "      <th>logCount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>California</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>24424.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>https://www.cdph.ca.gov/</td>\n",
       "      <td>36.778259</td>\n",
       "      <td>-119.417931</td>\n",
       "      <td>10.103322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>Florida</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>21865.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.floridahealth.gov/</td>\n",
       "      <td>27.994402</td>\n",
       "      <td>-81.760254</td>\n",
       "      <td>9.992642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>Illinois</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>24593.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.idph.state.il.us/</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>-89.000000</td>\n",
       "      <td>10.110217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20</td>\n",
       "      <td>Louisiana</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>21951.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://dhh.louisiana.gov/</td>\n",
       "      <td>30.391830</td>\n",
       "      <td>-92.329102</td>\n",
       "      <td>9.996568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>24</td>\n",
       "      <td>Massachusetts</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>29918.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>https://www.mass.gov/orgs/department-of-public...</td>\n",
       "      <td>42.407211</td>\n",
       "      <td>-71.382439</td>\n",
       "      <td>10.306216</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25</td>\n",
       "      <td>Michigan</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>28059.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.michigan.gov/mdch</td>\n",
       "      <td>44.182205</td>\n",
       "      <td>-84.506836</td>\n",
       "      <td>10.242065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>34</td>\n",
       "      <td>New Jersey</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>71030.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>http://www.state.nj.us/health/</td>\n",
       "      <td>39.833851</td>\n",
       "      <td>-74.871826</td>\n",
       "      <td>11.170858</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>36</td>\n",
       "      <td>New York</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>211550.0</td>\n",
       "      <td>Yes, widespread</td>\n",
       "      <td>https://www.health.ny.gov/</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>-75.000000</td>\n",
       "      <td>12.262217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>44</td>\n",
       "      <td>Pennsylvania</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>26490.0</td>\n",
       "      <td>Yes, defined area(s)</td>\n",
       "      <td>https://www.health.pa.gov/Pages/default.aspx</td>\n",
       "      <td>41.203323</td>\n",
       "      <td>-77.194527</td>\n",
       "      <td>10.184523</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>Texas</td>\n",
       "      <td>10,001 or more</td>\n",
       "      <td>15492.0</td>\n",
       "      <td>Yes, defined area(s)</td>\n",
       "      <td>https://www.dshs.state.tx.us/</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>-100.000000</td>\n",
       "      <td>9.648079</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Jurisdiction           Range  Cases Reported Community Transmission�  \\\n",
       "5      California  10,001 or more         24424.0         Yes, widespread   \n",
       "10        Florida  10,001 or more         21865.0         Yes, widespread   \n",
       "15       Illinois  10,001 or more         24593.0         Yes, widespread   \n",
       "20      Louisiana  10,001 or more         21951.0         Yes, widespread   \n",
       "24  Massachusetts  10,001 or more         29918.0         Yes, widespread   \n",
       "25       Michigan  10,001 or more         28059.0         Yes, widespread   \n",
       "34     New Jersey  10,001 or more         71030.0         Yes, widespread   \n",
       "36       New York  10,001 or more        211550.0         Yes, widespread   \n",
       "44   Pennsylvania  10,001 or more         26490.0    Yes, defined area(s)   \n",
       "50          Texas  10,001 or more         15492.0    Yes, defined area(s)   \n",
       "\n",
       "                                                  URL        Lat          Lng  \\\n",
       "5                            https://www.cdph.ca.gov/  36.778259  -119.417931   \n",
       "10                      http://www.floridahealth.gov/  27.994402   -81.760254   \n",
       "15                       http://www.idph.state.il.us/  40.000000   -89.000000   \n",
       "20                          http://dhh.louisiana.gov/  30.391830   -92.329102   \n",
       "24  https://www.mass.gov/orgs/department-of-public...  42.407211   -71.382439   \n",
       "25                       http://www.michigan.gov/mdch  44.182205   -84.506836   \n",
       "34                     http://www.state.nj.us/health/  39.833851   -74.871826   \n",
       "36                         https://www.health.ny.gov/  43.000000   -75.000000   \n",
       "44       https://www.health.pa.gov/Pages/default.aspx  41.203323   -77.194527   \n",
       "50                      https://www.dshs.state.tx.us/  31.000000  -100.000000   \n",
       "\n",
       "     logCount  \n",
       "5   10.103322  \n",
       "10   9.992642  \n",
       "15  10.110217  \n",
       "20   9.996568  \n",
       "24  10.306216  \n",
       "25  10.242065  \n",
       "34  11.170858  \n",
       "36  12.262217  \n",
       "44  10.184523  \n",
       "50   9.648079  "
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "locations = top_10[[\"Lat\", \"Lng\"]].astype(float)\n",
    "cases = top_10[\"Cases Reported\"].astype(float)\n",
    "\n",
    "top_10.transform({\"Cases Reported\": np.log})\n",
    "\n",
    "top_10['logCount'] = top_10.transform({\"Cases Reported\": np.log})\n",
    "top_10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2b918c5d90fb484299c07a6c710bd831",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Figure(layout=FigureLayout(height='420px'))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = gmaps.figure()\n",
    "\n",
    "# Create heat layer\n",
    "heat_layer = gmaps.heatmap_layer(locations, weights=top_10.logCount,\n",
    "                                 dissipating=False, max_intensity=12,\n",
    "                                 point_radius=3)\n",
    "\n",
    "\n",
    "# Add layer\n",
    "fig.add_layer(heat_layer)\n",
    "\n",
    "# Display figure\n",
    "fig"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
